<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李飞阳</title>
  <subtitle>PM、Coder、Data mining</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://feiyang.li/"/>
  <updated>2017-05-06T13:53:12.187Z</updated>
  <id>http://feiyang.li/</id>
  
  <author>
    <name>Wing Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Coursera ML(8)-Neural Networks: Learning</title>
    <link href="http://feiyang.li/2017/05/06/Coursera-ML-8-Neural-Networks-Learning/index.html"/>
    <id>http://feiyang.li/2017/05/06/Coursera-ML-8-Neural-Networks-Learning/index.html</id>
    <published>2017-05-06T13:52:23.000Z</published>
    <updated>2017-05-06T13:53:12.187Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>本节笔记对应第五周Coursera课程 <a href="https://www.coursera.org/learn/machine-learning/home/week/5" target="_blank" rel="external">Neural Networks: Learning</a></p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="Cost-Fuction"><a href="#Cost-Fuction" class="headerlink" title="Cost Fuction"></a>Cost Fuction</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170504/221046501.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<ul>
<li>cost function  $$\begin{gather*} J(\Theta) = - \frac{1}{m} \sum_{i=1}^m \sum_{k=1}^K \left[y^{(i)}_k \log ((h_\Theta (x^{(i)}))_k) + (1 - y^{(i)}_k)\log (1 - (h_\Theta(x^{(i)}))_k)\right] \end{gather*}$$ 
我们使用循环，对每一行特征都预测K个不同的结果，然后利用循环在K个预测中选择可能性最高的一个，将其与y中的实际数据进行对比。</li>
</ul>
<ul>
<li>Similarly, the regularization term just sum up the square of all the parameters from all the layers: $$\frac{\lambda}{2m}\sum_{l=1}^{L-1} \sum_{i=1}^{s_l} \sum_{j=1}^{s_{l+1}} ( \Theta_{j,i}^{(l)})^2$$ 
正则化的这一项，是在排除了每一层$\theta_0$后，每一层的$\Theta$矩阵的和。</li>
<li>最里层的循环$j$循环所有的行(由$s_{l+1}$层的激活单元数决定)。</li>
<li>循环$i$则循环所有的列，由该层(s_l层)的激活单元数决定。</li>
</ul>
<p>Note:<br>这个看起来很复杂的代价函数与之前代价函数思想是一样的，我们希望通过代价函数来观察算法预测的结果与真实情况的误差有多大。不同的是，对于每一行特征，我们都会给出<strong>K个预测</strong>。</p>
<h1 id="Backpropagation-Algorithm"><a href="#Backpropagation-Algorithm" class="headerlink" title="Backpropagation Algorithm"></a>Backpropagation Algorithm</h1><p>这一块我也看的不是很懂，先不做笔记。之后如果有新的感悟，再记回来。</p>
<p>没有就算了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本节笔记对应第五周Coursera课程 &lt;a href=&quot;https://www.coursera.org/learn/machine-learning/home/week/5&quot;&gt;Neural Networks: Learning&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks-Clients</title>
    <link href="http://feiyang.li/2017/05/05/ss-client/index.html"/>
    <id>http://feiyang.li/2017/05/05/ss-client/index.html</id>
    <published>2017-05-05T06:23:13.000Z</published>
    <updated>2017-05-06T12:30:20.814Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">本博客介绍上谷歌的方法，密码是我名字拼音。</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="enter the password" id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">解密</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+vGNw9WFlFr7bwDL2UB1MLNFra1KjX+WZUX5PCfWwnxiyz/0dbirs/4eVr+ld3l8lEVBfN7wPMDzaiqcvO1Pt3ZQIw1iE0d48EvjaygS1Qk2i6699KnYNvbZIuqPSQuTxIliuAMd13xzZJRuG2JMfqaZbQqCErmEhu4urt4/W78etBzVw4jAatCvY80pdXl4SGsenz/EPVXJO0uWi+D1db/7nK1bO7oZjgNIklaxh/rgSbUkyJx1Bwe5xUJjvJVDkXDCcsA9lOfnzRB7L4i+pN4NofzMONSvRVKhY5HLM6e7w+8MFO6U5J7llxA6IaVcnLQpRLOllePYnyUYdZHt9n+/LInYVva3zmo7kHhMtwOiDmyAx+EYHTK0hWSW2p4+UPkicyqB6GDvMLHCj49SiKyGAyiiWhIfjxxjoxprEJZuDLfg7UgdYpeNdtKOASd84ED8VDvAXArQV1b84+sTX99fs3bkFK+F75YcRqTGkqOqOWe8D1IVx6peKf3ZZbXZD7XiZRqQSvvZgURBOtgoz1yfd+LKg1zdrRFxDf/VbaAo8p7pXorLr5xlw06qpsZbnC66yCEQeGVcCgMC3Gkw7QFwKSh3ciMP4QVludJK1PDvFP7T7lsH6kC4aKsg3ZzzYiUXJTqbA9cHf35duj4lsDS/PYuepMdBERp5HOqE7XnLXJo7m+f3NSP48JmgLWlgHY9LfUoKf3GVoLH+2xNYeWcf+qSikKYvc+7L2SVh+mD9RNPnb6b0j8o5lFfpek0uNVQZ5aqA9zDJqFUUgaj7Hxn+cM8sWW22aNinM2pT4eF9VPF91Jjz7BleFvImFcphx6eRf0tpBVCq4RKcN85ZQhx/UYTegQ48J2cjyIzLhG0cb6pxN+ws/qehso6v12FoWvkboOk8wISMMRjfSrtiIoxT7U+TVySoD5BO8A2eWrhOD9Fcy2/m8oZ7Q6s/DsVEHNkmD9AFFlg2FFNAEkEoSMgGkKuLwhqLTcR9m+Bc+LyxTv5SRHCJzpcydkn1AjHXXIWapp3NajmaCujiwAhta9IgtXZO7dFUvK0UbiKUvUak0tEplmu/DJz6esiCKBeBrrFFtmyWIgDFk9b1UpWYG7swaFheRibRbGZPTjXN0Jls3WSGNTUGnJ2T6z0KbTpSC+ejJycDKXnbHJ510OmbZN9GPARKtjAnFS9q97cVZqbnM85xwbJsKM5xELiwn10K2vjsfwzHgx98BXMHnOf/+BUqEYkA+Vpc47mnlf+hIJU0tXhI5A/lDAtxvc5wexzRpUWU7fFYgVeQaB8v00dIT+me7j0xAqkwAuIxG8LBLhHi5T0boQ/4A/L1jaF2BiA2i045WtGD+NHKuO75CXgCOccfzv/mfVFL0tzowtJAw0PXxrSxcPMsmRlSjkvwuVCZ+kHLKkSUgivIrsmXMg9Y4sydzfINANoZ/G53go16GOhewo64IGn6qAqoay8LJSotOP8v4ODZJBDaaXfr+c64xAGoxxgcjP+2cMeL+5msL6P7LwnlnnGN6SYKo05Ler7Pt5yLgmKdsTF2z9hquVyn1elFplQ/ftEDeDd/ZyfTSHwiZOOqjDjxeECP40/ZUNAX8DDqBjRa4QLMuzoa0tSjrTWsG0p2vY6gpo5qlepjSYkH2K+RfZckLzzYoNIjFjten5tI5yiBm0ZYo7caymBNLpsd7DfSGQSZrWa22N7NTSMOKFzGf98Feo3CJzL9Rf2Cv2ilo8dn+0jvL8vQd90SYX8Iz3QcvxuRnlQ3LqAqCnKQn4otSl23m0WbtR9ebRNfLAWOArQpA1G4OBHVJW40W8Olrkn6Fou9CazRDhvHP7qbw6y8Y9G0t9qAl8jXHo2akiTj8pzYrpowsyInPcvL6Mw19d6yWcVegNJyOkc1XV1r3Ef+2R/Z5zSYix7nJgERCWZ7ddzH86GogUpAuIxH47f2BUyOPjVNAK4ZQMzousjGu17IXSpoz2eHE6HfFzl5jq5jNRp8I0XcZ14Z11hPUJXNDPmE7OZ6uTVvnXMf6h53k+kbW9faytTZUYDiBGYBivEH5NYCRYbC3ZtnGDvCiRqUanSsnKI/HJ+HenputQNHkBui9RPoPhxN4wtRWr1MHEnFKXMmQKV8LEeAeKBqj5sAd9oDrFb1oCu+pFdE0xv5d/4e40bxSJtA6e4jv6yFnerXOSVZDIAS5mLTrg6QSCwpdl3rvrzrPhIT7zJuLjEOKLjYCobnaFykD097v14D9F0PkLED9cO5dZEk7d14LjM+V5GbCBvUw+wHt3lSZBw2M3TINyZ2uIVxhRQfV3zbEj8cn8W3UkXtrehA5Pf1FZ94QoY7cahk0VuwRsgYJaHZPxcubUo3t67Sj4lIL1VXLQtp2+K6NhsGKFiEPXlqtVeAv/LVJXpS+AaE3jQQJm66QZS+JfPEtMn8ElFywCQD8f5CpKKA4nfLDby7O4/uZMWVZC8hEbb4Q7d6wn+/Mp7wLrXz1rhLs7vn5F9x1kfeIAzPtqSQYSvq7BAjNOvwexKIjozMdt26L/PmDzLN88FWkglu7iRDsUOEsskpDNzGYRqX8F7Y0Ys5ipyf6/pXQ2VCifgMq6v0o5+a3/yVNyHoTGqMo4cCRvtoRCPAnFiyy1pu2iQblQok0grJkTSH9IJPNXzcwXdpPZyGoIJXp+HpsdWQ6qmfWUWMWwvnKmqyZ+atR2cWMBYmVFZ72+QQnTYzMaEnoYcPVN98icg2fngeKtXpECiukPC7iIxy0A0cit4LcCpAzaPMR8GdWigPurwt3B7a3apvW4rKwRykyp9cR8oS2+hzJZXCiglrCGxS9HdzbMpiNa2QzqO7gWM7aTU5xLoGzZPXXtIyaFNwOt4BfLwLzjp1j2osJcPVPdM651/9kxml8iUVqNkRg+mTSt5gVFmkPYYC2uvKZZFMfN5+MyTGpObIhBaLkjoYVQde3YKxI+GDKYrEtJvSElPA50WtzYlzq7IJ/7/Qpwqe1LKXfEJB39NzeuIVKawSsDss48/ar9wht12kLA2BvSSMaac0bwUJBpVt9wamERBbJ+62BTZNAcKGZwqPtjhn40f5eu611C8v5klHpw+Qs/L4bCV2ViVkrCZWCwHKgpRT+8GxUctRVWRn8UqT6vCGyJBjB1lICCNxIOIssGand/hGND9sSbEjSHPB5zpBJ1Qjt5BY3PSKGPjmiydwswtNZGZDydz8v19RXrnarojUxGcNfSOXLaeSOcLQLnayVj3qZtFpD6M0608i1TP40YHrlsPojR2zVHRU8mf1RPzp76wgZvdAGl+TsQSybTsUoQhc62iMxkgdn0BSC4G5MYpc7k/XGatsunlWxbNDjdBpDA1ONwuFWyQeycgrpRlY37b/hm2Lce+CWXWIDDA7mAjWo1kxJbg/5i54ikEQ6YoVyF2C7H16xxoFfZN4qCen1dcoQbK5kXNs9W96HMykTmZKAbvW9KwuNfuyOiVHtQPlP5rhxcTqgP0NIWBzzVQQg5XY1XeSIPHqaj7eJatX4Y64KePIqYpRSi/00g6k0OFd41ClfoJq5acBlkB2KCJHckBTBfNRXtQSmwv4PXvz8/yiGEWfzu7/fX6bs3T+ocX3ezImMqj3I/VnA88ceVW8bI785OlF5HfH0xH2z7k05Brkeu2ruSmO5iliG6rh1HwT2Y7/6teQL9pjilqrpKm48HYPQENFwSUqoKbNDol3gzY3WkDOtzs3ihIdHqmaqi29ADIvTj0L/j1SywtU1naQr3B0doa16XQdAIuPCwV0Ujltblpus4zouPvTK1GS1HXIaLFD7F2kWBMIItzx/BiBOZtbWgfkGfNKiXbyjN1/50KEU03rZiBWOi9NDZ/nB3rZTt1eAFJ8Ptl+tOhk5nUzNpoVLauNRvFBqPBXklBIOGNwU9WgRMOGbF2EamYqhAEzT6odDVeTfudbqWq4NViY/geym6ziQfrjJ4O/vw37t2utzoRJXSmq3MrU8y597kTKgXbVM0c319waSbWCUH3ruPx9nT9VN8SOyo3vMsRMa6YzAQIm8AvgiSfRNo4Y6yosalTicsND5a9MICJXFmhSH6hE//3iw7dn6bYCCy5k40HOgQCXewPkYVIbNP98uKa9L5yUbyDwZKYSmzKqdH/srTJJTVFhUEZz/tw23ym251Rb9u9QJtt3SdLI26GAeDDKds9HgqE+sUMJZNsU8ky0LNltpqQS2MXVCmpYyjaZq0blUBkHCLcbPQbDil/BqeQm9t1wlc0VXE6TK064Q03oICiV1x6hl0RTJB2r6o6gGm9VDGMfqBBxRLCOPbADWIz1yltYUitnPJrjDWj4LUCW1EIu1cVJnm97/gmB6D3/yUYNA4XOcbzBhUUPnsWiWtNCtALKjo1IhZoy+2Q1NqoASqjmUQuT/BU3sNQaJJNMd8Etw2Ma/hTXjrmM2TxzrFd2ZpDGpXiX8WIfeoJcJUWifJhtjjkZgOmWWOO/LHw6JeTKsnGXUYV/B8khhd0M7sWoyUjfucPungcj/aHJAFN8Icom4o+WYEr2mfDxPSa5LWftFTjw//xWClRwdk2cgFJzpFyXDK46P1b0LpPbLA7yX54hEYEOGLc512QshYvtLe4Vx8WbnNfsZXrWl3DwPnxBacz8M2VffyAHWJFjaPw4x2LWHfoRzc/hWIfOSc7nb+RelVtPfu512cCV93lc/9w+k4/QTJghwjxpx3PfQpC5dvRNarja9xj61SrQ8zVDYivC6lpuJBq/iojb4H4Y0QAjr9FAbYpYpBQv0kg4uFumeCONNi4CwgONPSQDqwHkhjZosDc2Ob6StrP+aQG/P9rdu3iUwZAXrjyomfjiXHvxWTF/64Pndqg/oe+rVx2FH/hOo4kfejjBkH5ZEWXHFw9+uEIhkZwxJYBV3jJPMJ/JgsSqMeV2Vi88PoTU2e0oyPrE0GuIJ8wKhJ861G87aecW4Zzk13v5cvFsg/bUHxO6qI4UEVr6vGDiDWhaO22zXaPSmC85IkJO8zH3W91CP3sMeKzzvVGgE8N2jVVyfuJZyRzFQ2zwWR0MtHCVDTtCkGmwwQB6SsVvmEg13/c/qhjQaGROUs2ZnISxGrjb5fS4Lftim8KfMEF5lIY4XOsJrXxG9ftiv2mKCOv/YnBqpbKcHhWYB+kk8BrUEWdm1eo2uySJT6EiChUvW6Ji80dwO8zoVekjN2GFKYTv42A0nlDm09nzkcjIwRoV8zT1+am60WUlDwX8pXTU+VTkmZ50VBC+Hdvxd9aYoVCQfBTxJxDPCYD3kaZv/E4PVS6iawXZFsoAsqEKIt22a7WMfNe/vXgfZ91YfACNfsHjzLcuHyAvRqQJ6Nqrifhhju6nxmlNvTZ0M5O1eD6C86ftt//HNZ5QsIS1Y1ysGIHS1ZM3ixfBMm2vdSeIaZi18yXWr+RriOQDOJjb5OwWeiPrIIRsOLv1uhZBrVaV9ciS08WSlLRjwwvcAVnvJo6TKFC+8OhARMRwI0mnHwLJhVi44NWJZ2KjfTfpTgQDfUn6aU+JU7K9QkRV0WIXdXcMK/jeS0tpvXRD7NEFanVXtvvRA6P5ylMeZlEhW46fGgr4j/bT5HC5YkZDqom3vW4fTDgcoaa9a2wRqyKHHFNKV0F4z625qJgUsB9PKuchzV6TqxqQV7Wk2SGSyHaDTIdhi9akjQQAC88WHk00CcAI1QJa4v9121+Tc9nf9FI/qm4Pqj0LKVFIagwnZPeklNI9Dq4z0jmjjZ8KMorM8GrCaTcATGz5W1whGujXh2Vcq5SsqSQj7VhnXZZr98OdxWgdT2KOL8W+lzc/0e3cIuzLLFJ2p9mW3vliY2q8sq4TqjiMCUB2LqXw/fPcaq5r+tmCp9xUztovDILVX8pNp7V0P6BD0jE2ION8Y+ppr6yTNIzh8lBga3HxxsM+JrrTY/2X2WMCnorsiQCen9WHNjvm8fLacyACLEhrjr3dbWU0MKdXXPBW8LkBb4HvSn9yfm+6GaJjBQ73ytOUY4oax26intVkbtsH/oBK0X0My6V+1lilCWAarDJpxMntQlZHB3UM9GRmnjlv4zKnUtto9vZtUsO4RuHiPfjlvFxUPCYDh3kAAZJViIUNbCuzHarfx9nr1yBTNEhxhcMYvum5sLYd38w2QqY5F6h1zOwiF8fs1xId6jVvfocAzfOocW0xzckwdA6hUkumuufNFqaGKqMia20mcEY/OUI5h4Q/1zRTBej5M4X7bzEVo+ULJpHLHUj7+EgxbAmThRNR2ZCSqs3y3MdIap9mOZZHNl7uSIwvXS8m82r2fcl90UQrkEX3KHNRKIvEU2B6Z05WinjkrLAeolb7lTAI93FpJYgvVRx4fMNukQTD9HBhq3gx5H5hHEYXeUFoQRYbv1OGMVn6HTs02JPMj0iwrYHtGhHX2ttIVTupO5H3Aiergu1aimf0JLkXUbyPnjWfVTY/FAnmBD9Yw9SDJIY2370jY6nPMaB5Mev56gx65V6K0eBOvJ2YBEUo8gCSj/klHxwbJY6WC/27jONqAYYxeRTIeMj0nDQayfyk7s9zCbXAVyqTN6nQykHyVaChxMGAbtt13/uOeGZcmBrltXA/em+MqrNUizUjDD3cwg1Zty3uvasi2savUbY9VADnLWADLB7irf8l7MlJUeyFzgxLtmflnM3pc/nGalZU0fSwPrT/X1V12NRLaNmOUnnhaNkI7vxAqJ3b1pKnMBfGIYffpYFhfHaR4o/7TxGY5nHQ== </div>]]></content>
    
    <summary type="html">
    
      本博客介绍上谷歌的方法，密码是我名字拼音。
    
    </summary>
    
    
      <category term="GFW" scheme="http://feiyang.li/tags/GFW/"/>
    
      <category term="Linux" scheme="http://feiyang.li/tags/Linux/"/>
    
      <category term="vps" scheme="http://feiyang.li/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>ss-panel + ss py mu安装教程</title>
    <link href="http://feiyang.li/2017/05/05/ss-panel-full/index.html"/>
    <id>http://feiyang.li/2017/05/05/ss-panel-full/index.html</id>
    <published>2017-05-05T06:09:39.000Z</published>
    <updated>2017-05-06T12:59:25.074Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>系统介绍： 1g内存，单核，也就是传说中的腾讯1元学生机。centos6.8 x32。</p>
</blockquote>
<hr>
<a id="more"></a>
<p>读者建议：如果使用国外vps<a href="http://feiyang.li/2017/05/03/ss-panel/index.html">建议</a>会快速很多。国内vps建议本方法。</p>
<h1 id="lnmp环境配置"><a href="#lnmp环境配置" class="headerlink" title="lnmp环境配置"></a>lnmp环境配置</h1><p>这里使用最新的<a href="https://lnmp.org/install.html" target="_blank" rel="external">lnmp1.4</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -c http://soft.vpser.net/lnmp/lnmp1.4beta.tar.gz &amp;&amp; tar zxf lnmp1.4beta.tar.gz &amp;&amp; cd lnmp1.4 &amp;&amp; ./install.sh lnmp</div></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-386d2197beb13767.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h1 id="安装ss-panel前端"><a href="#安装ss-panel前端" class="headerlink" title="安装ss-panel前端"></a>安装ss-panel前端</h1><h2 id="下载-ss-panel-源码"><a href="#下载-ss-panel-源码" class="headerlink" title="下载 ss-panel 源码"></a>下载 ss-panel 源码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home/wwwroot/ </div><div class="line">git clone https://github.com/orvice/ss-panel.git</div></pre></td></tr></table></figure>
<p>安装好之后，是这个样子的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-3e71112a9cdfccdf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure>
<h2 id="配置-ss-panel"><a href="#配置-ss-panel" class="headerlink" title="配置 ss-panel"></a>配置 ss-panel</h2><h3 id="env文件配置"><a href="#env文件配置" class="headerlink" title=".env文件配置"></a>.env文件配置</h3><p>安装依赖文件，并配置.env<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /home/wwwroot/ss-panel/</div><div class="line">curl -sS https://install.phpcomposer.com/installer | php</div><div class="line">chmod +x composer.phar</div><div class="line">php composer.phar install</div></pre></td></tr></table></figure></p>
<ul>
<li>安装依赖那一步时间会久一些，因为一共有75个依赖，而且很多被墙了（因此如果直接用国外vps，真的会好很多），换了国内源会<strong>稍微</strong>好一些。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-4173fded8c763653.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="漫长的等待" title="">
                </div>
                <div class="image-caption">漫长的等待</div>
            </figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chmod -R 777 storage</div><div class="line">cp .env.example .env</div><div class="line">vi .env</div></pre></td></tr></table></figure>
<ul>
<li>这里主要是修改数据库的内容，还有<strong>muKey</strong>。</li>
</ul>
<h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">lnmp vhost add</div><div class="line"># 写入站点网址</div><div class="line">/home/wwwroot/ss-panel/public</div><div class="line"># 允许重写规则，其余一律是n</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-9cc134f8f8f9c336.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>进入nginx配置文件再修改一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/nginx/conf/vhost/</div></pre></td></tr></table></figure></p>
<p>完整配置文件应该是这个样子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line"> listen 80;</div><div class="line"> #listen [::]:80;</div><div class="line">server_name ss.feiyang.li n;</div><div class="line">index index.html index.htm index.php default.html default.htm default.php;</div><div class="line">root /home/wwwroot/ss.feiyang.li/public;</div><div class="line"> </div><div class="line">location / &#123;</div><div class="line">                        try_files $uri $uri/ /index.php$is_args$args;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">location ~ [^/]\.php(/|$) &#123;</div><div class="line"> # comment try_files $uri =404; to enable pathinfo</div><div class="line"> try_files $uri =404;</div><div class="line"> fastcgi_pass unix:/tmp/php-cgi.sock;</div><div class="line"> fastcgi_index index.php;</div><div class="line"> include fastcgi.conf;</div><div class="line"> #include pathinfo.conf;</div><div class="line">fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir = /home/wwwroot/:/temp/:/proc&quot;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"> </div><div class="line"> location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</div><div class="line"> expires 30d;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> location ~ .*\.(js|css)?$</div><div class="line"> &#123;</div><div class="line"> expires 12h;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="新建ss数据库"><a href="#新建ss数据库" class="headerlink" title="新建ss数据库"></a>新建ss数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p</div><div class="line"># 输入自己的密码</div><div class="line">create database ss;</div><div class="line">use ss;</div><div class="line">source  /home/wwwroot/ss-panel/db.sql;</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-80792ea3b7bfa2c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>现在访问你的站点，就可以看到 ss-panel 啦：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-ef524b4d747eeaec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="添加管理员账户"><a href="#添加管理员账户" class="headerlink" title="添加管理员账户"></a>添加管理员账户</h2><p>文字排序会让强迫症奔溃。。。。。<br><code>php xcat createAdmin</code></p>
<h2 id="邮箱设置"><a href="#邮箱设置" class="headerlink" title="邮箱设置"></a>邮箱设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vi .env</div><div class="line">mailgun_key = &apos;key-0****c09&apos; //上面的KEY</div><div class="line">mailgun_domain = &apos;https://api.mailgun.net/v3/feiyang.li&apos; //你经过验证过的域名</div><div class="line">mailgun_sender = &apos;postmaster@****.net&apos; //postmaster@你经过验证过的域名</div></pre></td></tr></table></figure>
<h2 id="https证书"><a href="#https证书" class="headerlink" title="https证书"></a>https证书</h2><p><code>lnmp ssl add</code><br>/home/wwwroot/ss-panel/1_ss.feiyang.li_bundle.crt<br>/home/wwwroot/ss-panel/2_ss.feiyang.li.key<br>获得绿色小锁~<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-531eebc6ef00d2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="安装-SS-PY-MU-服务端"><a href="#安装-SS-PY-MU-服务端" class="headerlink" title="安装 SS PY MU 服务端"></a>安装 SS PY MU 服务端</h1><h2 id="安装libsodium支持chacha20"><a href="#安装libsodium支持chacha20" class="headerlink" title="安装libsodium支持chacha20"></a>安装libsodium支持chacha20</h2><p>centos：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum -y groupinstall &quot;Development Tools&quot;</div><div class="line">wget https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz</div><div class="line">tar xf libsodium-1.0.11.tar.gz &amp;&amp; cd libsodium-1.0.11</div><div class="line">./configure &amp;&amp; make -j2 &amp;&amp; make install</div><div class="line">echo /usr/local/lib &gt; /etc/ld.so.conf.d/usr_local_lib.conf</div><div class="line">ldconfig</div></pre></td></tr></table></figure></p>
<p>ubuntu/debian：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install build-essential</div><div class="line">wget https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz</div><div class="line">tar xf libsodium-1.0.11.tar.gz &amp;&amp; cd libsodium-1.0.11</div><div class="line">./configure &amp;&amp; make -j2 &amp;&amp; make install</div><div class="line">ldconfig</div></pre></td></tr></table></figure></p>
<h2 id="将代码-clone-到本地："><a href="#将代码-clone-到本地：" class="headerlink" title="将代码 clone 到本地："></a>将代码 clone 到本地：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">git clone https://github.com/fsgmhoward/shadowsocks-py-mu.git</div><div class="line">cd ~/shadowsocks-py-mu/shadowsocks/</div></pre></td></tr></table></figure>
<p>其中的 shadowsocks 子目录才是我们需要的，外面的是 setup.py 的相关文件。</p>
<h2 id="配置-shadowsocks-manyuser"><a href="#配置-shadowsocks-manyuser" class="headerlink" title="配置 shadowsocks-manyuser"></a>配置 shadowsocks-manyuser</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp config_example.py config.py</div><div class="line">vi config.py</div></pre></td></tr></table></figure>
<p>修改其中第 15 行和第 29~31 行的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># 启用 MultiUser API</div><div class="line">API_ENABLED = True</div><div class="line"></div><div class="line"># 就是在你的站点地址后面加个 /mu</div><div class="line">API_URL = &apos;http://ss.feiyang.li/mu&apos;  </div><div class="line"># 还记得上面在 .env 中填写的 muKey 吗？把它填在这里</div><div class="line">API_PASS = &apos;api_key_just_for_test&apos;</div></pre></td></tr></table></figure>
<p>由于我们选择使用 Mu API 来与前端通信，所以我们不需要修改 config.py 中任何关于数据库的配置。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://upload-images.jianshu.io/upload_images/3326314-16089377aa275a7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>好了，现在可以试着运行一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python servers.py</div></pre></td></tr></table></figure></p>
<p>（注意，是 <strong>servers.py</strong> 而不是 server.py）。如果没错的话，应该可以看到这样的输出：</p>
<h2 id="配置-ss-manyuser-守护进程"><a href="#配置-ss-manyuser-守护进程" class="headerlink" title="配置 ss-manyuser 守护进程"></a>配置 ss-manyuser 守护进程</h2><ul>
<li><p>安装 supervisor （用的是上面安装过的 pip）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install python-setuptools</div><div class="line">easy_install supervisor</div></pre></td></tr></table></figure>
</li>
<li><p>创建 supervisor 配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</div></pre></td></tr></table></figure>
</li>
<li><p>运行 supervisor 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">supervisord</div></pre></td></tr></table></figure>
</li>
<li><p>配置 supervisor 以监控 ss-manyuser 运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/supervisord.conf</div></pre></td></tr></table></figure>
</li>
<li><p>在文件尾部添加如下内容并酌情修改：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[program:ss-manyuser]</div><div class="line">command = python /root/shadowsocks-py-mu/shadowsocks/servers.py  </div><div class="line">user = root  </div><div class="line">autostart = true  </div><div class="line">autorestart = true</div></pre></td></tr></table></figure>
</li>
</ul>
<p>其中 command 里的目录请自行修改为你的 servers.py所在的绝对路径。</p>
<ul>
<li><p>重启 supervisor 服务以加载配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">killall -HUP supervisord</div></pre></td></tr></table></figure>
</li>
<li><p>查看 shadowsocks-manyuser 是否已经运行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ps -ef | grep servers.py</div><div class="line">root 952 739 0 15:40 ? 00:00:00 python /root/shadowsocks-rm/shadowsocks/servers.py</div></pre></td></tr></table></figure>
</li>
<li><p>可以通过以下命令管理 shadowsock-manyuser 的状态</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">supervisorctl &#123;start|stop|restart&#125; ss-manyuser</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="谷歌BBR加速"><a href="#谷歌BBR加速" class="headerlink" title="谷歌BBR加速"></a>谷歌BBR加速</h1><h2 id="OpenVZ-以外的（-KVM-、-Xen-、-VMware-等）"><a href="#OpenVZ-以外的（-KVM-、-Xen-、-VMware-等）" class="headerlink" title="OpenVZ 以外的（ KVM 、 Xen 、 VMware 等）"></a>OpenVZ 以外的（ KVM 、 Xen 、 VMware 等）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</div><div class="line">chmod +x bbr.sh</div><div class="line">./bbr.sh</div></pre></td></tr></table></figure>
<p>详细信息见： <a href="https://www.91yun.org/archives/5174" target="_blank" rel="external">https://www.91yun.org/archives/5174</a></p>
<h2 id="OpenVZ-小鸡"><a href="#OpenVZ-小鸡" class="headerlink" title="OpenVZ 小鸡"></a>OpenVZ 小鸡</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/mmmwhy/LKL_BBR/master/lkl/install.sh &amp;&amp; bash install.sh</div></pre></td></tr></table></figure>
<p>详细内容见：<a href="https://www.91yun.org/archives/6281" target="_blank" rel="external">https://www.91yun.org/archives/6281</a><br>我稍微修改了一下端口范围(9000-19999)，因为之前那个范围是在太奇葩了。</p>
<p>其余常见错误见：<br><a href="http://feiyang.li/2017/05/03/ss-panel/index.html#常见错误">http://feiyang.li/2017/05/03/ss-panel/index.html#常见错误</a></p>
<p>与上文一样，本文参考了如下博主文章，在此致谢：<br><a href="https://blessing.studio/build-shadowsocks-sharing-site-with-ss-panel/" target="_blank" rel="external">https://blessing.studio/build-shadowsocks-sharing-site-with-ss-panel/</a><br><a href="http://bitzhi.com/2016/03/install-ss-go-mu-and-ss-panel-v3/" target="_blank" rel="external">http://bitzhi.com/2016/03/install-ss-go-mu-and-ss-panel-v3/</a><br><a href="https://levyhsu.com/?p=98" target="_blank" rel="external">https://levyhsu.com/?p=98</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;系统介绍： 1g内存，单核，也就是传说中的腾讯1元学生机。centos6.8 x32。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="GFW" scheme="http://feiyang.li/tags/GFW/"/>
    
      <category term="Linux" scheme="http://feiyang.li/tags/Linux/"/>
    
      <category term="vps" scheme="http://feiyang.li/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>可能是最简单的ss-panel安装教程</title>
    <link href="http://feiyang.li/2017/05/03/ss-panel/index.html"/>
    <id>http://feiyang.li/2017/05/03/ss-panel/index.html</id>
    <published>2017-05-03T12:13:08.000Z</published>
    <updated>2017-05-06T12:30:19.646Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>因为阿松同学找我要ss账号，因此我大概花了一天时间搞了搞ss-panel，顺便做个记录吧。网上那么多教程有些是写得笼统，有些还是瞎复制的。由此萌生了想要写一篇配置 ss-panel 和 ss-manyuser 的教程，希望能够帮到需要的人。</p>
</blockquote>
<hr>
<a id="more"></a>
<p>产品要求：fuck the wall、在可用范围内尽量简单一些（因此不考虑ssr，魔改panel也不考虑）读者建议：如果使用国外vps，建议本方法。国内vps<a href="http://feiyang.li/2017/05/05/ss-panel-full/index.html">建议</a></p>
<h1 id="ss-panel前端"><a href="#ss-panel前端" class="headerlink" title="ss-panel前端"></a>ss-panel前端</h1><p>我看官方文档，按部就班的做了一个前端，最后才发现竟然有ss-panel一键脚本，真的是血都要吐出来了。好气哦。这里直接介绍一键脚本方式。</p>
<h2 id="脚本下载以及运行"><a href="#脚本下载以及运行" class="headerlink" title="脚本下载以及运行"></a>脚本下载以及运行</h2><p>首先运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y install screen</div><div class="line">screen -S ssmanyuser</div></pre></td></tr></table></figure></p>
<p>然后执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://cloud.echoteen.com/s/24bSM2Ba48JTHlQ/download -O ss-install.bin</div><div class="line">chmod a+x ss-install.bin</div><div class="line">bash ss-install.bin</div></pre></td></tr></table></figure></p>
<h2 id="安装ss-panel"><a href="#安装ss-panel" class="headerlink" title="安装ss-panel"></a>安装ss-panel</h2><p>选择1，安装ss-panel前端，注意，首先要安装好前端！<br>所以输入1，然后回车！<br>安装好了以后，打开网站配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx/conf.d</div><div class="line">vim ss-panel.conf</div></pre></td></tr></table></figure>
<p>打开配置文件<br>主要是检查<strong>server_name</strong>和<strong>root</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170503/202011192.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></p>
<h2 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h2><p><code>mysql_secure_installation</code><br>首先输入上述代码进行数据库初始化<br>配置数据库密码等，这个自行设置！<br>然后就是创建数据库和导入数据库了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p</div><div class="line"># 输入自己的密码</div><div class="line">create database ss;</div><div class="line">use ss;</div><div class="line">source  /home/www/panel/db.sql</div></pre></td></tr></table></figure></p>
<p>真的，有了这个脚本之后，解决了很多麻烦的问题。</p>
<h2 id="配置配置文件"><a href="#配置配置文件" class="headerlink" title="配置配置文件"></a>配置配置文件</h2><p>配置网页文件（.env），就是站点信息，很简单的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim .env</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">//  ss-panel v3 配置</div><div class="line">//</div><div class="line">// !!! 修改此key为随机字符串确保网站安全 !!!</div><div class="line">key = &apos;randomKey&apos;</div><div class="line">env = &apos;prod&apos;  // 正式环境请保持env为prod确保安全</div><div class="line">debug =  &apos;false&apos;  //  正式环境请确保为false</div><div class="line">appName = &apos;ss-panel3&apos;             //站点名称</div><div class="line">baseUrl = &apos;https://www.google.com&apos;            // 站点地址</div><div class="line">timeZone = &apos;PRC&apos;        // RPC 天朝时间  UTC 格林时间</div><div class="line">pwdMethod = &apos;md5&apos;       // 密码加密   可选 md5,sha256</div><div class="line">salt = &apos;&apos;               // 密码加密用，从旧版升级请留空</div><div class="line">theme    = &apos;default&apos;   // 主题</div><div class="line">session = &apos;file&apos; //默认</div><div class="line">cache   = &apos;file&apos; //默认</div><div class="line">tokenDriver = &apos;db&apos; //默认</div><div class="line">// mu key 用于校验ss-go mu的请求,后边会用到</div><div class="line">muKey = &apos;&apos;</div><div class="line">// 邮件</div><div class="line">mailDriver = &apos;mailgun&apos;   // mailgun   #smtp不在支持,仅供测试</div><div class="line"> </div><div class="line">// 注册限制,每天每个ip能注册的次数</div><div class="line">ipDayLimit = &apos;10&apos;</div><div class="line"> </div><div class="line">// 邮箱验证设置</div><div class="line">emailVerifyEnabled = &apos;false&apos; // 是否开启注册时邮箱验证 (true:开启 false:关闭)</div><div class="line">emailVerifyCodeLength = &apos;8&apos;  // 邮箱验证代码长度</div><div class="line">emailVerifyTTL = &apos;30&apos;        // 验证代码有效时间 单位分钟</div><div class="line"> </div><div class="line">// 用户签到设置</div><div class="line">checkinTime = &apos;22&apos;      // 签到间隔时间 单位小时</div><div class="line">checkinMin = &apos;93&apos;       // 签到最少流量 单位MB</div><div class="line">checkinMax = &apos;97&apos;       // 签到最多流量</div><div class="line"> </div><div class="line">//</div><div class="line">defaultTraffic = &apos;1&apos;      // 用户初始流量 单位GB</div><div class="line">// 注册后获得的邀请码数量</div><div class="line">inviteNum = &apos;2&apos;</div><div class="line"> </div><div class="line">// 记录流量日志到dynamodb ,beta,请勿开启</div><div class="line">log_traffic_dynamodb = &apos;false&apos;</div><div class="line"> </div><div class="line"># database 数据库配置</div><div class="line">db_driver = &apos;mysql&apos;</div><div class="line">db_host = &apos;localhost&apos;</div><div class="line">db_port = &apos;3306&apos;</div><div class="line">db_database = &apos;ss&apos;</div><div class="line">db_username = &apos;root&apos;</div><div class="line">db_password = &apos;root&apos;</div><div class="line">db_charset = &apos;utf8&apos;</div><div class="line">db_collation = &apos;utf8_general_ci&apos;</div><div class="line">db_prefix = &apos;&apos;</div><div class="line"> </div><div class="line"># redis</div><div class="line">redis_scheme = &apos;tcp&apos;</div><div class="line">redis_host = &apos;127.0.0.1&apos;</div><div class="line">redis_port = &apos;6379&apos;</div><div class="line">redis_database = &apos;0&apos;</div><div class="line">redis_pass = &apos;&apos;</div><div class="line"> </div><div class="line"># mailgun</div><div class="line">mailgun_key = &apos;&apos;</div><div class="line">mailgun_domain = &apos;&apos;</div><div class="line">mailgun_sender = &apos;&apos;</div><div class="line"> </div><div class="line"># smtp</div><div class="line">smtp_host = &apos;&apos;</div><div class="line">smtp_username = &apos;&apos;</div><div class="line">smtp_port = &apos;&apos;</div><div class="line">smtp_name = &apos;&apos;</div><div class="line">smtp_sender = &apos;&apos;</div><div class="line">smtp_passsword = &apos;&apos;</div><div class="line">smtp_ssl = &apos;true&apos;</div><div class="line"> </div><div class="line"># aws</div><div class="line">aws_access_key_id = &apos;&apos;</div><div class="line">aws_secret_access_key = &apos;&apos;</div><div class="line">aws_region = &apos;ap-northeast-1&apos;</div><div class="line">aws_ses_region = &apos;us-east-1&apos;</div><div class="line">aws_ses_sender = &apos;&apos;</div></pre></td></tr></table></figure>
<h2 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a>添加管理员</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">php xcat createAdmin</div><div class="line"></div><div class="line">add admin/创建管理员帐号.....  </div><div class="line">Enter your email/输入管理员邮箱: h@prinzeugen.net  </div><div class="line">Enter password for: h@prinzeugen.net /为 h@prinzeugen.net 添加密码 xxx  </div><div class="line">Email: h@prinzeugen.net, Password: xxx  </div><div class="line">Press [Y] to create admin..... 按下[Y]确认来确认创建管理员账户..... y  </div><div class="line">start create admin accountSuccessful/ 添加成功!</div></pre></td></tr></table></figure>
<p>最后登录下网站<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170503/201708892.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<hr>
<p>以上内容全部复制自：<a href="https://www.echoteen.com/yijian-sspanel-many-user.html/comment-page-1" target="_blank" rel="external">https://www.echoteen.com/yijian-sspanel-many-user.html/comment-page-1</a></p>
<p>因为ss-panel前端是基于ss原版，而该一键脚本后端基于ssr，因此这里不建议采用该脚本。</p>
<h1 id="部署并配置-shadowsocks-manyuser"><a href="#部署并配置-shadowsocks-manyuser" class="headerlink" title="部署并配置 shadowsocks-manyuser"></a>部署并配置 shadowsocks-manyuser</h1><p>这里使用的是 <a href="https://github.com/mengskysama/shadowsocks/tree/manyuser" target="_blank" rel="external">https://github.com/mengskysama/shadowsocks/tree/manyuser</a> 版ss</p>
<h2 id="安装-shadowsocks-manyuser"><a href="#安装-shadowsocks-manyuser" class="headerlink" title="安装 shadowsocks-manyuser"></a>安装 shadowsocks-manyuser</h2><p>先将代码 clone 到本地：<br><code>git clone https://github.com/fsgmhoward/shadowsocks-py-mu.git</code><br>其中的 shadowsocks 子目录才是我们需要的，注意这个地方和其他版本的不一样，ssr里子文件表示单用户。本版根据server.py还是servers.py来判断是不是多用户版本。</p>
<h2 id="配置-shadowsocks-manyuser"><a href="#配置-shadowsocks-manyuser" class="headerlink" title="配置 shadowsocks-manyuser"></a>配置 shadowsocks-manyuser</h2><p>进入 shadowsocks 目录，将 config_example.py 复制一份到 config.py：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp config_example.py config.py</div><div class="line">vi config.py</div></pre></td></tr></table></figure>
<p>修改其中第 15 行和第 29~31 行的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># 启用 MultiUser API</div><div class="line">API_ENABLED = True</div><div class="line"></div><div class="line"># 就是在你的站点地址后面加个 /mu</div><div class="line">API_URL = &apos;http://ss.feiyang.li/mu&apos;  </div><div class="line"># 还记得上面在 .env 中填写的 muKey 吗？把它填在这里</div><div class="line">API_PASS = &apos;api_key_just_for_test&apos;</div></pre></td></tr></table></figure></p>
<p>由于我们选择使用 Mu API 来与前端通信，所以我们不需要修改 config.py 中任何关于数据库的配置。</p>
<p>好了，现在可以试着运行一下 $ python servers.py 了（注意，是 servers.py 而不是 server.py）。如果没错的话，应该可以看到这样的输出：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170503/201724918.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h1><h2 id="不能上网"><a href="#不能上网" class="headerlink" title="不能上网"></a>不能上网</h2><p>首先国际惯例查看连接：</p>
<p><code>netstat -anp | grep 你的端口</code></p>
<p>正常的话，应该是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Active Internet connections (servers and established)  </div><div class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name  </div><div class="line">tcp        0      0 0.0.0.0:62111            0.0.0.0:*               LISTEN      32083/python  </div><div class="line">tcp        0      0 162.233.122.111:62111    115.233.233.140:47177   TIME_WAIT   -  </div><div class="line">tcp        0      0 162.233.122.111:62111    115.233.233.140:47161   TIME_WAIT   -  </div><div class="line">tcp        0      0 162.233.122.111:62111    115.233.233.140:47160   TIME_WAIT   -  </div><div class="line">tcp        0      0 162.233.122.111:62111    115.233.233.140:47157   TIME_WAIT   -</div></pre></td></tr></table></figure></p>
<p>所以如果你要开放注册，就要这样配置你的 iptables：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 注意是半角冒号，意为允许 12450 及以上的端口</div><div class="line"># 也可以指定 12450:15550 这样的范围</div><div class="line">iptables -I INPUT -p tcp -m tcp --dport 12450: -j ACCEPT</div><div class="line">iptables-save</div></pre></td></tr></table></figure></p>
<h2 id="ss-panel-的多节点配置"><a href="#ss-panel-的多节点配置" class="headerlink" title="ss-panel 的多节点配置"></a>ss-panel 的多节点配置</h2><p>其实多节点也没咋玄乎，说白了就是多个后端共用一个前端而已。而且我们的后端是使用 Mu API 来与前端进行交互的，所以多节点的配置就更简单了：只要把所有后端的 config.py 中的 API_URL 和 API_PASS 都改成一样即可（记得 API_ENABLED = True）。</p>
<h2 id="ss服务端安装libsodium支持chacha20"><a href="#ss服务端安装libsodium支持chacha20" class="headerlink" title="ss服务端安装libsodium支持chacha20"></a>ss服务端安装libsodium支持chacha20</h2><p>centos：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum -y groupinstall &quot;Development Tools&quot;</div><div class="line">wget https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz</div><div class="line">tar xf libsodium-1.0.11.tar.gz &amp;&amp; cd libsodium-1.0.11</div><div class="line">./configure &amp;&amp; make -j2 &amp;&amp; make install</div><div class="line">echo /usr/local/lib &gt; /etc/ld.so.conf.d/usr_local_lib.conf</div><div class="line">ldconfig</div></pre></td></tr></table></figure></p>
<p>ubuntu/debian：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">apt-get install build-essential</div><div class="line">wget https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz</div><div class="line">tar xf libsodium-1.0.11.tar.gz &amp;&amp; cd libsodium-1.0.11</div><div class="line">./configure &amp;&amp; make -j2 &amp;&amp; make install</div><div class="line">ldconfig</div></pre></td></tr></table></figure></p>
<hr>
<p>参考链接：<br><a href="https://blessing.studio/build-shadowsocks-sharing-site-with-ss-panel/" target="_blank" rel="external">https://blessing.studio/build-shadowsocks-sharing-site-with-ss-panel/</a><br><a href="https://www.echoteen.com/yijian-sspanel-many-user.html/comment-page-1/#comments" target="_blank" rel="external">https://www.echoteen.com/yijian-sspanel-many-user.html/comment-page-1/#comments</a><br><a href="https://github.com/sendya/shadowsocks-panel/wiki/Shadowsocks-Panel-%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B" target="_blank" rel="external">https://github.com/sendya/shadowsocks-panel/wiki/Shadowsocks-Panel-%E9%9D%A2%E6%9D%BF%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;因为阿松同学找我要ss账号，因此我大概花了一天时间搞了搞ss-panel，顺便做个记录吧。网上那么多教程有些是写得笼统，有些还是瞎复制的。由此萌生了想要写一篇配置 ss-panel 和 ss-manyuser 的教程，希望能够帮到需要的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="GFW" scheme="http://feiyang.li/tags/GFW/"/>
    
      <category term="Linux" scheme="http://feiyang.li/tags/Linux/"/>
    
      <category term="vps" scheme="http://feiyang.li/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(7)-Programming Exercise 3</title>
    <link href="http://feiyang.li/2017/05/02/Coursera-ML-7-Programming-Exercise-3/index.html"/>
    <id>http://feiyang.li/2017/05/02/Coursera-ML-7-Programming-Exercise-3/index.html</id>
    <published>2017-05-02T10:01:38.000Z</published>
    <updated>2017-05-02T10:04:58.026Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>machine-learning-ex3.zip <a href="http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex3.zip" target="_blank" rel="external">下载链接</a>，第四周的课程相对来说比较简单，大致介绍了神经网络相关内容。</p>
</blockquote>
<hr>
<a id="more"></a>
<p>注意，官方用的是matlab，这里我用的全部是python，代码是不一样的，更不能当做作业提交。</p>
<hr>
<h1 id="Programming-Exercise-3-Multi-class-Classification-and-Neural-Networks"><a href="#Programming-Exercise-3-Multi-class-Classification-and-Neural-Networks" class="headerlink" title="Programming Exercise 3 - Multi-class Classification and Neural Networks"></a>Programming Exercise 3 - Multi-class Classification and Neural Networks</h1><h2 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h2><p>For this exercise, you will use logistic regression and neural networks to recognize handwritten digits (from 0 to 9). </p>
<p><strong>ex3data1.mat</strong>提供了一个训练集，X包含5000个长度为400的向量，每个向量可以展示为一个20*20的图像。Y内为图像所对应的数字。</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># %load ../../standard_import.txt</span></div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"><span class="comment"># load MATLAB files</span></div><div class="line"><span class="keyword">from</span> scipy.io <span class="keyword">import</span> loadmat</div><div class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> minimize</div><div class="line"></div><div class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</div><div class="line"></div><div class="line">pd.set_option(<span class="string">'display.notebook_repr_html'</span>, <span class="keyword">False</span>)</div><div class="line">pd.set_option(<span class="string">'display.max_columns'</span>, <span class="keyword">None</span>)</div><div class="line">pd.set_option(<span class="string">'display.max_rows'</span>, <span class="number">150</span>)</div><div class="line">pd.set_option(<span class="string">'display.max_seq_items'</span>, <span class="keyword">None</span>)</div><div class="line"> </div><div class="line"><span class="comment">#%config InlineBackend.figure_formats = &#123;'pdf',&#125;</span></div><div class="line">%matplotlib inline</div><div class="line"></div><div class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</div><div class="line">sns.set_context(<span class="string">'notebook'</span>)</div><div class="line">sns.set_style(<span class="string">'white'</span>)</div></pre></td></tr></table></figure>
<h3 id="Load-MATLAB-datafiles"><a href="#Load-MATLAB-datafiles" class="headerlink" title="Load MATLAB datafiles"></a>Load MATLAB datafiles</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data = loadmat(<span class="string">'data/ex3data1.mat'</span>)</div><div class="line">data.keys()</div></pre></td></tr></table></figure>
<pre><code>dict_keys([&apos;__header__&apos;, &apos;__version__&apos;, &apos;__globals__&apos;, &apos;X&apos;, &apos;y&apos;])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">weights = loadmat(<span class="string">'data/ex3weights.mat'</span>)</div><div class="line">weights.keys()</div></pre></td></tr></table></figure>
<pre><code>dict_keys([&apos;__header__&apos;, &apos;__version__&apos;, &apos;__globals__&apos;, &apos;Theta1&apos;, &apos;Theta2&apos;])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">y = data[<span class="string">'y'</span>]</div><div class="line"><span class="comment"># Add constant for intercept</span></div><div class="line">X = np.c_[np.ones((data[<span class="string">'X'</span>].shape[<span class="number">0</span>],<span class="number">1</span>)), data[<span class="string">'X'</span>]]</div><div class="line"></div><div class="line">print(<span class="string">'X: &#123;&#125; (with intercept)'</span>.format(X.shape))</div><div class="line">print(<span class="string">'y: &#123;&#125;'</span>.format(y.shape))</div></pre></td></tr></table></figure>
<pre><code>X: (5000, 401) (with intercept)
y: (5000, 1)
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">theta1, theta2 = weights[<span class="string">'Theta1'</span>], weights[<span class="string">'Theta2'</span>]</div><div class="line"></div><div class="line">print(<span class="string">'theta1: &#123;&#125;'</span>.format(theta1.shape))</div><div class="line">print(<span class="string">'theta2: &#123;&#125;'</span>.format(theta2.shape))</div></pre></td></tr></table></figure>
<pre><code>theta1: (25, 401)
theta2: (10, 26)
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sample = np.random.choice(X.shape[<span class="number">0</span>], <span class="number">20</span>)</div><div class="line">plt.imshow(X[sample,<span class="number">1</span>:].reshape(<span class="number">-1</span>,<span class="number">20</span>).T)</div><div class="line">plt.axis(<span class="string">'off'</span>);</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170502/171813517.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="Multiclass-Classification"><a href="#Multiclass-Classification" class="headerlink" title="Multiclass Classification"></a>Multiclass Classification</h2><h3 id="Logistic-regression-hypothesis"><a href="#Logistic-regression-hypothesis" class="headerlink" title="Logistic regression hypothesis"></a>Logistic regression hypothesis</h3> $$ h_{\theta}(x) = g(\theta^{T}x)$$ 
 $$ g(z)=\frac{1}{1+e^{−z}} $$ 
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(z)</span>:</span></div><div class="line">    <span class="keyword">return</span>(<span class="number">1</span> / (<span class="number">1</span> + np.exp(-z)))</div></pre></td></tr></table></figure>
<h3 id="Regularized-Cost-Function"><a href="#Regularized-Cost-Function" class="headerlink" title="Regularized Cost Function"></a>Regularized Cost Function</h3> $$ J(\theta) = \frac{1}{m}\sum_{i=1}^{m}\big[-y^{(i)}\, log\,( h_\theta\,(x^{(i)}))-(1-y^{(i)})\,log\,(1-h_\theta(x^{(i)}))\big] + \frac{\lambda}{2m}\sum_{j=1}^{n}\theta_{j}^{2}$$ 
<h3 id="Vectorized-Cost-Function"><a href="#Vectorized-Cost-Function" class="headerlink" title="Vectorized Cost Function"></a>Vectorized Cost Function</h3> $$ J(\theta) = \frac{1}{m}\big((\,log\,(g(X\theta))^Ty+(\,log\,(1-g(X\theta))^T(1-y)\big) + \frac{\lambda}{2m}\sum_{j=1}^{n}\theta_{j}^{2}$$ 
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lrcostFunctionReg</span><span class="params">(theta, reg, X, y)</span>:</span></div><div class="line">    m = y.size</div><div class="line">    h = sigmoid(X.dot(theta))</div><div class="line">    </div><div class="line">    J = <span class="number">-1</span>*(<span class="number">1</span>/m)*(np.log(h).T.dot(y)+np.log(<span class="number">1</span>-h).T.dot(<span class="number">1</span>-y)) + (reg/(<span class="number">2</span>*m))*np.sum(np.square(theta[<span class="number">1</span>:]))</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> np.isnan(J[<span class="number">0</span>]):</div><div class="line">        <span class="keyword">return</span>(np.inf)</div><div class="line">    <span class="keyword">return</span>(J[<span class="number">0</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lrgradientReg</span><span class="params">(theta, reg, X,y)</span>:</span></div><div class="line">    m = y.size</div><div class="line">    h = sigmoid(X.dot(theta.reshape(<span class="number">-1</span>,<span class="number">1</span>)))</div><div class="line">      </div><div class="line">    grad = (<span class="number">1</span>/m)*X.T.dot(h-y) + (reg/m)*np.r_[[[<span class="number">0</span>]],theta[<span class="number">1</span>:].reshape(<span class="number">-1</span>,<span class="number">1</span>)]</div><div class="line">        </div><div class="line">    <span class="keyword">return</span>(grad.flatten())</div></pre></td></tr></table></figure>
<h1 id="One-vs-all"><a href="#One-vs-all" class="headerlink" title="One-vs-all"></a>One-vs-all</h1><h2 id="One-vs-all-Classification"><a href="#One-vs-all-Classification" class="headerlink" title="One-vs-all Classification"></a>One-vs-all Classification</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">oneVsAll</span><span class="params">(features, classes, n_labels, reg)</span>:</span></div><div class="line">    initial_theta = np.zeros((X.shape[<span class="number">1</span>],<span class="number">1</span>))  <span class="comment"># 401x1</span></div><div class="line">    all_theta = np.zeros((n_labels, X.shape[<span class="number">1</span>])) <span class="comment">#10x401</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> np.arange(<span class="number">1</span>, n_labels+<span class="number">1</span>):</div><div class="line">        res = minimize(lrcostFunctionReg, initial_theta, args=(reg, features, (classes == c)*<span class="number">1</span>), method=<span class="keyword">None</span>,</div><div class="line">                       jac=lrgradientReg, options=&#123;<span class="string">'maxiter'</span>:<span class="number">50</span>&#125;)</div><div class="line">        all_theta[c<span class="number">-1</span>] = res.x</div><div class="line">    <span class="keyword">return</span>(all_theta)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theta = oneVsAll(X, y, <span class="number">10</span>, <span class="number">0.1</span>)</div></pre></td></tr></table></figure>
<h2 id="One-vs-all-Prediction"><a href="#One-vs-all-Prediction" class="headerlink" title="One-vs-all Prediction"></a>One-vs-all Prediction</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">predictOneVsAll</span><span class="params">(all_theta, features)</span>:</span></div><div class="line">    probs = sigmoid(X.dot(all_theta.T))</div><div class="line">        </div><div class="line">    <span class="comment"># Adding one because Python uses zero based indexing for the 10 columns (0-9),</span></div><div class="line">    <span class="comment"># while the 10 classes are numbered from 1 to 10.</span></div><div class="line">    <span class="keyword">return</span>(np.argmax(probs, axis=<span class="number">1</span>)+<span class="number">1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pred = predictOneVsAll(theta, X)</div><div class="line">print(<span class="string">'Training set accuracy: &#123;&#125; %'</span>.format(np.mean(pred == y.ravel())*<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>Training set accuracy: 93.24 %
</code></pre><h2 id="Multiclass-Logistic-Regression-with-scikit-learn"><a href="#Multiclass-Logistic-Regression-with-scikit-learn" class="headerlink" title="Multiclass Logistic Regression with scikit-learn"></a>Multiclass Logistic Regression with scikit-learn</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">clf = LogisticRegression(C=<span class="number">10</span>, penalty=<span class="string">'l2'</span>, solver=<span class="string">'liblinear'</span>)</div><div class="line"><span class="comment"># Scikit-learn fits intercept automatically, so we exclude first column with 'ones' from X when fitting.</span></div><div class="line">clf.fit(X[:,<span class="number">1</span>:],y.ravel())</div></pre></td></tr></table></figure>
<pre><code>LogisticRegression(C=10, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class=&apos;ovr&apos;, n_jobs=1,
          penalty=&apos;l2&apos;, random_state=None, solver=&apos;liblinear&apos;, tol=0.0001,
          verbose=0, warm_start=False)
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pred2 = clf.predict(X[:,<span class="number">1</span>:])</div><div class="line">print(<span class="string">'Training set accuracy: &#123;&#125; %'</span>.format(np.mean(pred2 == y.ravel())*<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>Training set accuracy: 96.5 %
</code></pre><h1 id="Neural-Networks"><a href="#Neural-Networks" class="headerlink" title="Neural Networks"></a>Neural Networks</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(theta_1, theta_2, features)</span>:</span></div><div class="line">    z2 = theta_1.dot(features.T)</div><div class="line">    a2 = np.c_[np.ones((data[<span class="string">'X'</span>].shape[<span class="number">0</span>],<span class="number">1</span>)), sigmoid(z2).T]</div><div class="line">    </div><div class="line">    z3 = a2.dot(theta_2.T)</div><div class="line">    a3 = sigmoid(z3)</div><div class="line">        </div><div class="line">    <span class="keyword">return</span>(np.argmax(a3, axis=<span class="number">1</span>)+<span class="number">1</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pred = predict(theta1, theta2, X)</div><div class="line">print(<span class="string">'Training set accuracy: &#123;&#125; %'</span>.format(np.mean(pred == y.ravel())*<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>Training set accuracy: 97.52 %
</code></pre><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><h2 id="展示图片"><a href="#展示图片" class="headerlink" title="展示图片"></a>展示图片</h2><p>因为给的数据是矩阵的形式，所以需要分为单个向量，重新设置形状。然后展示出来，跟<a href="http://feiyang.li/2017/03/17/python-mnist/index.html">手写字体识别</a>是很像。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">%matplotlib inline</div><div class="line"><span class="keyword">import</span> scipy.io <span class="keyword">as</span> sio </div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line">matfn=<span class="string">'C:/Users/wing/Documents/MATLAB/ex3/ex3data1.mat'</span>  </div><div class="line">data=sio.loadmat(matfn)  </div><div class="line">im = data[<span class="string">'X'</span>][<span class="number">0</span>]</div><div class="line">im = im.reshape(<span class="number">20</span>,<span class="number">20</span>)</div><div class="line">plt.imshow(im , cmap=<span class="string">'gray'</span>)</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170416/135847233.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure>
<p>如果想要一次展示多个图像呢，写个循环就可以了。不过太多的话，可能就看不清了。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">im = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">500</span>):</div><div class="line">    plt.subplot(<span class="number">10</span>, <span class="number">50</span>, i + <span class="number">1</span>)</div><div class="line">    temp = data[<span class="string">'X'</span>][i]</div><div class="line">    im.append(temp.reshape(<span class="number">20</span>,<span class="number">20</span>))</div><div class="line">    plt.imshow(im[i], cmap=<span class="string">'gray'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure></p>
<h2 id="reshape内-1的用法"><a href="#reshape内-1的用法" class="headerlink" title="reshape内-1的用法"></a><strong>reshape</strong>内-1的用法</h2><p>官方文档：numpy.reshape - NumPy v1.11 Manual</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>np.reshape(a, (<span class="number">3</span>,<span class="number">-1</span>))  <span class="comment"># the unspecified value is inferred to be 2</span></div><div class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</div><div class="line">       [<span class="number">3</span>, <span class="number">4</span>],</div><div class="line">       [<span class="number">5</span>, <span class="number">6</span>]])</div></pre></td></tr></table></figure>
<p>-1表示我懒得计算该填什么数字，由python通过a和其他的值推测出来。</p>
<h2 id="LogisticRegression"><a href="#LogisticRegression" class="headerlink" title="LogisticRegression"></a>LogisticRegression</h2><p><code>from sklearn.linear_model import LogisticRegression</code></p>
<p><a href="http://www.cnblogs.com/xupeizhi/archive/2013/07/05/3174703.html" target="_blank" rel="external">http://www.cnblogs.com/xupeizhi/archive/2013/07/05/3174703.html</a><br><a href="http://scikit-learn.org/stable/index.html" target="_blank" rel="external">http://scikit-learn.org/stable/index.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;machine-learning-ex3.zip &lt;a href=&quot;http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex3.zip&quot;&gt;下载链接&lt;/a&gt;，第四周的课程相对来说比较简单，大致介绍了神经网络相关内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(6)-Neural Networks Representation</title>
    <link href="http://feiyang.li/2017/04/15/Coursera-ML-6-Neural-Networks-Representation/index.html"/>
    <id>http://feiyang.li/2017/04/15/Coursera-ML-6-Neural-Networks-Representation/index.html</id>
    <published>2017-04-15T13:42:33.000Z</published>
    <updated>2017-04-15T13:47:22.229Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>神经网络模型</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="Neural-Networks-Model"><a href="#Neural-Networks-Model" class="headerlink" title="Neural Networks Model"></a>Neural Networks Model</h1><h2 id="A-single-neuron-model-logistic-unit"><a href="#A-single-neuron-model-logistic-unit" class="headerlink" title="A single neuron model: logistic unit"></a>A single neuron model: logistic unit</h2> $$\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline \end{bmatrix}\rightarrow\begin{bmatrix}\ \ \ \newline \end{bmatrix}\rightarrow h_\theta(x)$$ 
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/171348080.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<ul>
<li>Takes 3+1 inputs(the extra input called bias is just like $θ_0$ in logistic regression, not shown in picture).</li>
<li>Both input and output could be represented as vectors, in which each unit has its own parameters $θ$</li>
<li>All the units in the same layer take the same input $x$, as the pic shows.</li>
<li>Each unit has only one output: $sigmoid(θ^Tx)$. Of course there’re other choices for sigmoid function.</li>
</ul>
<h2 id="Neural-Networks"><a href="#Neural-Networks" class="headerlink" title="Neural Networks"></a>Neural Networks</h2> $$\begin{bmatrix}x_0 \newline x_1 \newline x_2 \newline x_3\end{bmatrix}\rightarrow\begin{bmatrix}a_1^{(2)} \newline a_2^{(2)} \newline a_3^{(2)} \newline \end{bmatrix}\rightarrow h_\theta(x)$$ 
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/202821288.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>其中<br> $$\begin{align*}& a_i^{(j)} = \text{"activation" of unit $i$ in layer $j$} \newline& \Theta^{(j)} = \text{matrix of weights controlling function mapping from layer $j$ to layer $j+1$}\end{align*}$$ </p>
<h1 id="Calculation-from-one-layer-to-the-next"><a href="#Calculation-from-one-layer-to-the-next" class="headerlink" title="Calculation from one layer to the next"></a>Calculation from one layer to the next</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/212357016.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>In the picture above, we have the networks from layer j to layer j+1, in which layer j has 3(+1) units while layer j+1 has 3 layers. Let $s_j=3$, $s_j+1=3$</p>
<ul>
<li>$α^{(j)}$ : Output of the $j_{th}$ layer. $s_j+1$ dimension vector.</li>
<li> $θ_i^{(j)}$  : Parameters in the $i<em>{th}$ unit of $(j+1)</em>{th}$ layer. $s_j+1$ dimension vector.</li>
<li> ${\theta^{(j)}} = \begin{bmatrix} \theta_1^{(j)} & \theta_2^{(j)} & \cdots & \theta_{s_(j + 1)}^{(j)} \end{bmatrix}^T$  : All the network parameters from $j<em>{th}$ layer to ${(j+1)}</em>{th}$ layer.</li>
<li>We have: $\alpha^{(j+1)} = sigmoid(\mathbf{\theta^{(j)}}\alpha^{(j)})$ add $\alpha_0^{(j+1)}$</li>
</ul>
<h1 id="Multiclass-Classification"><a href="#Multiclass-Classification" class="headerlink" title="Multiclass Classification"></a>Multiclass Classification</h1> <figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/212115423.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="分类器" title="">
                </div>
                <div class="image-caption">分类器</div>
            </figure>
<p>Each $y^{(i)}$ represents a different image corresponding to either a car, pedestrian, truck, or motorcycle. The inner layers, each provide us with some new information which leads to our final hypothesis function. The setup looks like:<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/212141965.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170415/203254413.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>Example: layer 1 has 2 input nodes and layer 2 has 4 activation nodes. Dimension of  $\Theta^{(1)}$ is going to be 4×3 where $s_j = 2$ and $s_{j+1} = 4$, so $s_{j+1} \times (s_j + 1) = 4 \times 3$$ </p>
<hr>
<p>今天苏州的天气真是闷热，实在是看不下去了。因此本小节笔记，有大段参考自 <a href="https://github.com/shawnau/shawnau.github.io/blob/master/2016-02-11-Neural-Networks-Representation.html" target="_blank" rel="external">shawnau.github.io</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;神经网络模型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(5)-Logistic Regression and Regularization with Python</title>
    <link href="http://feiyang.li/2017/03/30/Coursera-ML-5-Programming-Exercise-2/index.html"/>
    <id>http://feiyang.li/2017/03/30/Coursera-ML-5-Programming-Exercise-2/index.html</id>
    <published>2017-03-30T04:46:00.000Z</published>
    <updated>2017-04-15T12:16:09.671Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p><a href="http://feiyang.li/2017/03/26/Coursera-ML-3-Multivariate-Linear-Regression-python/index.html">线性回归算法</a>，可用于房屋价格的估计及股票市场分析。 <a href="https://www.coursera.org/learn/machine-learning/programming/ixFof/logistic-regression" target="_blank" rel="external">Logistic Regression</a> （逻辑回归）是当前业界比较常用的机器学习方法，用于估计某种事物的可能性。比如某用户购买某商品的可能性，某病人患有某种疾病的可能性，以及某广告被用户点击的可能性等。相关公式推导在<a href="http://feiyang.li/2017/03/27/Coursera-ML-4-Logistic-Regression/index.html">这里</a></p>
</blockquote>
<hr>
<a id="more"></a>
<p>Stanford coursera Andrew Ng 机器学习课程编程作业（Exercise 2），作业下载链接貌似被墙了，下载链接放这。<a href="http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex2.zip" target="_blank" rel="external">http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex2.zip</a></p>
<h1 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a><a href="http://feiyang.li/2017/03/27/Coursera-ML-4-Logistic-Regression/">预备知识</a></h1><p>这里应该分为 正常、过拟合和欠拟合，三种情况。</p>
<ul>
<li>Cost Function $$J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large] + \frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2$$ </li>
<li><p>Gradient Descent</p>
 $$\begin{align*} & \text{Repeat}\ \lbrace \newline & \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline & \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2...n\rbrace\newline & \rbrace \end{align*}$$ 
</li>
<li><p>Grad</p>
 $$Grad =  \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)}+ \frac{\lambda}{m}\theta_j$$ 
</li>
</ul>
<p>后边有一个$\frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2$和$\frac{\lambda}{m}\theta_j$小尾巴，作用就是进行 Regularization，防止拟合过度。</p>
<h1 id="Logistic-Regression"><a href="#Logistic-Regression" class="headerlink" title="Logistic Regression"></a>Logistic Regression</h1><h2 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h2><ul>
<li>you will build a logistic regression model to predict whether a student gets admitted into a university.（根据各科目分数预测该学生是否能录取）</li>
<li>For each training example, you have the applicant’s scores on two exams and the admissions decision.</li>
<li>Your task is to build a <strong>classication model</strong> that estimates an <strong>applicant’s probability of admission based the scores from those two exams.</strong></li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170327/203532750.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="dataset" title="">
                </div>
                <div class="image-caption">dataset</div>
            </figure>
<h2 id="python-code"><a href="#python-code" class="headerlink" title="python code"></a>python code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(path)</span>:</span></div><div class="line">    X,y = load_dataset(path) <span class="comment"># 调用底下那个东西</span></div><div class="line">    m, n = shape(X)</div><div class="line">    initial_theta = zeros(n + <span class="number">1</span>)</div><div class="line">    <span class="keyword">return</span> X,y,m,n,initial_theta</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_dataset</span><span class="params">(path)</span>:</span></div><div class="line">    data = loadtxt(path, delimiter=<span class="string">','</span>)</div><div class="line">    X = data[:,:<span class="number">2</span>]</div><div class="line">    y = data[:, <span class="number">2</span>]</div><div class="line">    <span class="keyword">return</span> X,y</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotData</span><span class="params">(X,y)</span>:</span></div><div class="line">    plt.plot(X[y==<span class="number">1</span>][:,<span class="number">0</span>],X[y==<span class="number">1</span>][:,<span class="number">1</span>],<span class="string">'k+'</span>,linewidth=<span class="number">2</span>,)</div><div class="line">    plt.plot(X[y==<span class="number">0</span>][:,<span class="number">0</span>],X[y==<span class="number">0</span>][:,<span class="number">1</span>],<span class="string">'ko'</span>,color=<span class="string">'y'</span>,linewidth=<span class="number">2</span>)</div><div class="line">    plt.xlabel(<span class="string">'科目一成绩'</span>, fontproperties=<span class="string">'SimHei'</span>)</div><div class="line">    plt.ylabel(<span class="string">'科目二成绩'</span>, fontproperties=<span class="string">'SimHei'</span>)</div><div class="line">    plt.title(<span class="string">'分数与录取的关系'</span>, fontproperties=<span class="string">'SimHei'</span>)</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(X, theta)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + exp(-dot(X, theta)))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cost</span><span class="params">(theta, X, y)</span>:</span></div><div class="line">    J = sum((-y*log(sigmoid(X,theta)) - (<span class="number">1</span>-y)*log(<span class="number">1</span>-sigmoid(X,theta))))/len(X)</div><div class="line">    <span class="keyword">return</span> J</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_grad</span><span class="params">(theta, X, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> (sigmoid(X,theta) - mat(y))*X*(<span class="number">1</span>/m)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotDecisionBoundary</span><span class="params">(theta, X, y)</span>:</span></div><div class="line">    plotData(X[:, <span class="number">1</span>:<span class="number">3</span>], y)</div><div class="line">    <span class="keyword">if</span> X.shape[<span class="number">1</span>] &lt;= <span class="number">3</span>:</div><div class="line">        plot_x = r_[X[:,<span class="number">2</span>].min()<span class="number">-2</span>,  X[:,<span class="number">2</span>].max()+<span class="number">2</span>]</div><div class="line">        plot_y = - (theta[<span class="number">1</span>]*plot_x + theta[<span class="number">0</span>])/theta[<span class="number">2</span>]</div><div class="line">        plt.plot(plot_x, plot_y)</div><div class="line">        plt.axis([<span class="number">30</span>,<span class="number">100</span>,<span class="number">30</span>,<span class="number">100</span>])</div><div class="line">        plt.legend([<span class="string">'Accepted'</span>, <span class="string">'Not Accepted'</span>, <span class="string">'Decision Boundary'</span>])</div><div class="line">        plt.show()</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(theta, X)</span>:</span>  </div><div class="line">    prob = sigmoid([<span class="number">1</span>,<span class="number">45</span>,<span class="number">85</span>] , result[<span class="number">0</span>])</div><div class="line">    <span class="keyword">return</span> prob</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">    path = <span class="string">'C:\\Users\\wing\\Desktop\\machine-learning-ex2\\ex2\\ex2data1.txt'</span></div><div class="line">    X,y,m,n,initial_theta = init(path)</div><div class="line">    X = column_stack((ones(m), X))</div><div class="line">    cost = get_cost(initial_theta, X, y)</div><div class="line">    grad = get_grad(initial_theta, X, y)</div><div class="line"></div><div class="line">    <span class="comment"># obtain the optimal theta</span></div><div class="line">    result = optimize.fmin_tnc(func=get_cost, x0=initial_theta, fprime=get_grad, args=(X, y))  </div><div class="line">    get_cost(result[<span class="number">0</span>], X, y)  </div><div class="line">    <span class="comment"># result = (array([-25.16131863,   0.20623159,   0.20147149]), 36, 0)</span></div><div class="line">    <span class="comment"># get_cost(result[0], X, y)  = 0.20349770158947464</span></div><div class="line">    plotDecisionBoundary(result[<span class="number">0</span>], X, y)</div><div class="line">    print(<span class="string">'For a student with scores 45 and 85, we predict an admission '</span> \</div><div class="line">         <span class="string">'probability of %f\n'</span>%predict(result[<span class="number">0</span>], X))</div><div class="line"></div><div class="line"><span class="comment"># For a student with scores 45 and 85, we predict an admission probability of 0.776291</span></div></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170330/121908473.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>最后进行了一个测试，如果一个学生两门考试成绩，一门45分，另外一门85分，那么他被录取的概率为77%。幸亏是在外国，在中国这分数，连大专都考不上。</p>
<h1 id="Logistic-Regression-and-Regularization"><a href="#Logistic-Regression-and-Regularization" class="headerlink" title="Logistic Regression and Regularization"></a>Logistic Regression and Regularization</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><ul>
<li>Suppose you are the product manager of the factory and you have the test results for some microchips on two dierent tests.</li>
<li>对于一批产品，有两个检测环节，通过检测结果判断产品是否合格。比如，宜家会有三十年床垫保证，那么如果确保床垫合格（用30年），我们只能通过一些检测，来推测产品是否合格。</li>
</ul>
<h2 id="python-code-1"><a href="#python-code-1" class="headerlink" title="python code"></a>python code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(path)</span>:</span></div><div class="line">    X,y = load_dataset(path)</div><div class="line">    dataplot(X,y)</div><div class="line">    X = map_feature(X[:,<span class="number">0</span>], X[:,<span class="number">1</span>])</div><div class="line">    initial_theta = zeros(size(X[<span class="number">1</span>]))</div><div class="line">    lam = <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> X,y,initial_theta,lam</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_dataset</span><span class="params">(path)</span>:</span></div><div class="line">    data = loadtxt(path, delimiter=<span class="string">','</span>)</div><div class="line">    X = data[:,:<span class="number">2</span>]</div><div class="line">    y = data[:, <span class="number">2</span>]</div><div class="line">    <span class="keyword">return</span> X,y</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dataplot</span><span class="params">(X,y)</span>:</span></div><div class="line">    plt.plot(X[y==<span class="number">1</span>][:,<span class="number">0</span>],X[y==<span class="number">1</span>][:,<span class="number">1</span>],<span class="string">'k+'</span>,linewidth=<span class="number">2</span>)</div><div class="line">    plt.plot(X[y==<span class="number">0</span>][:,<span class="number">0</span>],X[y==<span class="number">0</span>][:,<span class="number">1</span>],<span class="string">'ko'</span>,color=<span class="string">'y'</span>,linewidth=<span class="number">2</span>)</div><div class="line">    plt.legend([ <span class="string">'y = 1'</span>,<span class="string">'y = 0'</span>])</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(X, theta)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + exp(-dot(X, theta)))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">map_feature</span><span class="params">(x1, x2)</span>:</span></div><div class="line">    <span class="comment">#X1, X2, X1 ** 2, X2 ** 2, X1*X2, X1*X2 ** 2, etc...</span></div><div class="line"></div><div class="line">    x1.shape = (x1.size, <span class="number">1</span>)</div><div class="line">    x2.shape = (x2.size, <span class="number">1</span>)</div><div class="line">    degree = <span class="number">6</span></div><div class="line">    out = ones(shape=(x1[:, <span class="number">0</span>].size, <span class="number">1</span>))</div><div class="line">    m, n = out.shape</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, degree + <span class="number">1</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>):</div><div class="line">            r = (x1 ** (i - j)) * (x2 ** j)</div><div class="line">            out = append(out, r, axis=<span class="number">1</span>)</div><div class="line">    <span class="keyword">return</span> out</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cost</span><span class="params">(theta, X, y,lam)</span>:</span></div><div class="line">    hx = sigmoid(X,theta)</div><div class="line">    thetaR = theta[<span class="number">1</span>:]</div><div class="line">    J = sum((-y*log(hx) - (<span class="number">1</span>-y)*log(<span class="number">1</span>-hx)))/len(X) \</div><div class="line">        + (lam / (<span class="number">2.0</span> * len(X))) * (thetaR.T.dot(thetaR))</div><div class="line">    <span class="keyword">return</span> J</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_grad</span><span class="params">(theta, X, y,lam)</span>:</span></div><div class="line">    reg = (lam/len(y))*theta</div><div class="line">    reg[<span class="number">0</span>] = <span class="number">0</span></div><div class="line">    grad = X.T.dot(sigmoid(X,theta)-y)/len(y)+reg</div><div class="line">    <span class="keyword">return</span> grad</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotDecisionBoundary</span><span class="params">(theta,lam)</span>:</span></div><div class="line">    u = linspace(<span class="number">-1</span>, <span class="number">1.5</span>, <span class="number">50</span>)</div><div class="line">    v = linspace(<span class="number">-1</span>, <span class="number">1.5</span>, <span class="number">50</span>)</div><div class="line">    z = zeros(shape=(len(u), len(v)))</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(u)):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(v)):</div><div class="line">            z[i, j] = (map_feature(array(u[i]), array(v[j])).dot(array(theta)))</div><div class="line">    z = z.T</div><div class="line">    plt.contour(u, v, z)</div><div class="line">    plt.title(<span class="string">'lambda = %f'</span> % lam)</div><div class="line">    plt.xlabel(<span class="string">'Microchip Test 1'</span>)</div><div class="line">    plt.ylabel(<span class="string">'Microchip Test 2'</span>)</div><div class="line">    plt.axis([<span class="number">-0.85</span>,<span class="number">1.1</span>,<span class="number">-0.85</span>,<span class="number">1.1</span>])</div><div class="line">    plt.legend([<span class="string">'y = 1'</span>, <span class="string">'y = 0'</span>, <span class="string">'Decision boundary'</span>])</div><div class="line">    plt.show()</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">    path = <span class="string">'C:\\Users\\wing\\Desktop\\machine-learning-ex2\\ex2\\ex2data2.txt'</span></div><div class="line">    X,y,initial_theta,lam = init(path)</div><div class="line">    result = optimize.fmin_tnc(func=get_cost, x0=initial_theta, fprime=get_grad, args=(X, y,lam))  </div><div class="line">    plotDecisionBoundary(result[<span class="number">0</span>],lam)</div></pre></td></tr></table></figure>
<h2 id="运算结果"><a href="#运算结果" class="headerlink" title="运算结果"></a>运算结果</h2><ul>
<li>过拟合<br>lambda=0。不考虑 $\frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2$和$\frac{\lambda}{m}\theta_j$ ，我们可以看到图像已经被拟合过度。这样的答案没有通用性<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170330/122914544.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></li>
<li>欠拟合<br>lambda=10，欠拟合会导致数据的很多细节被抛弃。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170330/123134133.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></li>
<li>拟合较好<br>lambda=1，准确性到91%左右，这个准确率算低的了吧，还有很大上升空间。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170330/123236964.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
</ul>
<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p><a href="http://news.ustc.edu.cn/xwbl/201412/t20141205_206292.html" target="_blank" rel="external">熊辉</a>上课的时候，说机器学习需要调参数，参数很不好调，需要使用者对数据有极高的敏感度。</p>
<p>参数lambda就是这种感觉，感觉真的是乱调一通，然后就发现，诶哟，好像还不错。</p>
<p>参考链接：<br><a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html" target="_blank" rel="external">scipy.optimize.minimize</a><br><a href="https://en.wikipedia.org/wiki/Logistic_regression" target="_blank" rel="external">Logistic regression</a><br><a href="http://www.johnwittenauer.net/machine-learning-exercises-in-python-part-3/" target="_blank" rel="external">Machine Learning Exercises In Python, Part 3</a><br><a href="http://aimotion.blogspot.com/2011/11/machine-learning-with-python-logistic.html" target="_blank" rel="external">machine-learning-with-python-logistic</a></p>
<hr>
<p>以上</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=421091970&auto=0&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://feiyang.li/2017/03/26/Coursera-ML-3-Multivariate-Linear-Regression-python/index.html&quot;&gt;线性回归算法&lt;/a&gt;，可用于房屋价格的估计及股票市场分析。 &lt;a href=&quot;https://www.coursera.org/learn/machine-learning/programming/ixFof/logistic-regression&quot;&gt;Logistic Regression&lt;/a&gt; （逻辑回归）是当前业界比较常用的机器学习方法，用于估计某种事物的可能性。比如某用户购买某商品的可能性，某病人患有某种疾病的可能性，以及某广告被用户点击的可能性等。相关公式推导在&lt;a href=&quot;http://feiyang.li/2017/03/27/Coursera-ML-4-Logistic-Regression/index.html&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(4)-Logistic Regression</title>
    <link href="http://feiyang.li/2017/03/27/Coursera-ML-4-Logistic-Regression/index.html"/>
    <id>http://feiyang.li/2017/03/27/Coursera-ML-4-Logistic-Regression/index.html</id>
    <published>2017-03-27T11:13:38.000Z</published>
    <updated>2017-03-28T07:49:36.625Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>本节笔记对应<a href="https://www.coursera.org/learn/machine-learning/home/week/3" target="_blank" rel="external">第三周Coursera课程</a>  <strong>binary classification problem</strong></p>
</blockquote>
<hr>
<a id="more"></a>
<p><strong>Classification is not actually a linear function.</strong></p>
<h1 id="Classification-and-Representation"><a href="#Classification-and-Representation" class="headerlink" title="Classification and Representation"></a>Classification and Representation</h1><h2 id="Hypothesis-Representation"><a href="#Hypothesis-Representation" class="headerlink" title="Hypothesis Representation"></a>Hypothesis Representation</h2><ul>
<li>Sigmoid Function(or we called Logistic Function) $$\begin{align*}& h_\theta (x) = g ( \theta^T x ) \newline \newline& z = \theta^T x \newline& g(z) = \dfrac{1}{1 + e^{-z}}\end{align*}$$ 
Sigmoid Function 可以使输出值范围在$(0,1)$之间。$g(z)$对应的图为：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170327/112711489.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
</ul>
<ul>
<li>$h_\theta(x)$ will give us the <strong>probability</strong> that our output is 1.</li>
<li>Some basic knowledge of discrete $$\begin{align*}& h_\theta(x) = P(y=1 | x ; \theta) = 1 - P(y=0 | x ; \theta) \newline& P(y = 0 | x;\theta) + P(y = 1 | x ; \theta) = 1\end{align*}$$ 
</li>
</ul>
<h2 id="Decision-Boundary"><a href="#Decision-Boundary" class="headerlink" title="Decision Boundary"></a>Decision Boundary</h2><ul>
<li>translate the output of the hypothesis function as follows: $$\begin{align*}& h_\theta(x) \geq 0.5 \rightarrow y = 1 \newline& h_\theta(x) < 0.5 \rightarrow y = 0 \newline\end{align*}$$ </li>
<li>From these statements we can now say: $$\begin{align*}& \theta^T x \geq 0 \Rightarrow y = 1 \newline& \theta^T x < 0 \Rightarrow y = 0 \newline\end{align*}$$ 
</li>
</ul>
<h1 id="Logistic-Regression-Model"><a href="#Logistic-Regression-Model" class="headerlink" title="Logistic Regression Model"></a>Logistic Regression Model</h1><h2 id="Cost-function-for-one-variable-hypothesis"><a href="#Cost-function-for-one-variable-hypothesis" class="headerlink" title="Cost function for one variable hypothesis"></a>Cost function for one variable hypothesis</h2><ul>
<li>To let the cost function be convex for gradient descent, it should be like this: $$J(\theta) = \dfrac{1}{m} \sum_{i=1}^m \mathrm{Cost}(h_\theta(x^{(i)}),y^{(i)})$$ 
</li>
</ul>
 $$Cost(h_\theta (x), y) =\begin{cases}-log(h_\theta (x)),  (y = 1) \\-log(1 - h_\theta (x)), (y = 0) \\\end{cases}$$ 
<ul>
<li>example $$\begin{align*}& \mathrm{Cost}(h_\theta(x),y) = 0 \text{ if } h_\theta(x) = y \newline & \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 0 \; \mathrm{and} \; h_\theta(x) \rightarrow 1 \newline & \mathrm{Cost}(h_\theta(x),y) \rightarrow \infty \text{ if } y = 1 \; \mathrm{and} \; h_\theta(x) \rightarrow 0 \newline \end{align*}$$ 
</li>
</ul>
<h2 id="Simplified-Cost-Function-and-Gradient-Descent"><a href="#Simplified-Cost-Function-and-Gradient-Descent" class="headerlink" title="Simplified Cost Function and Gradient Descent"></a>Simplified Cost Function and Gradient Descent</h2><ul>
<li><p>compress our cost function’s two conditional cases into one case:</p>
 $$\mathrm{Cost}(h_\theta(x),y) = - y \; \log(h_\theta(x)) - (1 - y) \log(1 - h_\theta(x))$$ 
</li>
<li><p>entire cost function</p>
 $$J(\theta) = - \frac{1}{m} \displaystyle \sum_{i=1}^m [y^{(i)}\log (h_\theta (x^{(i)})) + (1 - y^{(i)})\log (1 - h_\theta(x^{(i)}))]$$ 
</li>
</ul>
<h2 id="Gradient-Descent"><a href="#Gradient-Descent" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h2><ul>
<li><p>the general form of gradient descent ，求偏导的得到$J(\theta)$的极值</p>
 $$\begin{align*}& Repeat \; \lbrace \newline & \; \theta_j := \theta_j - \alpha \dfrac{\partial}{\partial \theta_j}J(\theta) \newline & \rbrace\end{align*}$$ 
</li>
<li><p>using calculus </p>
 $$\frac{\partial}{\partial \theta_j} J(\theta) = \frac{1}{m}\sum\limits_{i=1}^{m}[(h_\theta (x^{(i)}) - y^{(i)})x_j^{(i)}]$$ 
</li>
<li><p>get</p>
 $$\begin{align*} & Repeat \; \lbrace \newline & \; \theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} \newline & \rbrace \end{align*}$$  
</li>
</ul>
<h2 id="Multiclass-Classification-One-vs-all"><a href="#Multiclass-Classification-One-vs-all" class="headerlink" title="Multiclass Classification: One-vs-all"></a>Multiclass Classification: One-vs-all</h2><ul>
<li>For more than 2 features of y, do logisitc regression for each feature separately</li>
<li>Train a logistic regression classifier $h_\theta(x)$ for each class￼ to predict the probability that ￼ ￼y = i￼ ￼. </li>
<li>To make a prediction on a new x, pick the class ￼that maximizes $ h_\theta (x) $<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170327/182954425.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
</ul>
<h1 id="Solving-the-Problem-of-Overfitting"><a href="#Solving-the-Problem-of-Overfitting" class="headerlink" title="Solving the Problem of Overfitting"></a>Solving the Problem of Overfitting</h1><h2 id="The-Problem-of-Overfitting"><a href="#The-Problem-of-Overfitting" class="headerlink" title="The Problem of Overfitting"></a>The Problem of Overfitting</h2><p><img src="http://cdn.mmmxcc.cn/blog/20170327/183239547.png" alt="mark"></p>
<h2 id="address-the-issue-of-overfitting"><a href="#address-the-issue-of-overfitting" class="headerlink" title="address the issue of overfitting"></a>address the issue of overfitting</h2><ul>
<li>Reduce the number of features:<ul>
<li>Manually select which features to keep.</li>
<li>Use a model selection algorithm (studied later in the course).</li>
</ul>
</li>
<li>Regularization:<ul>
<li>Keep all the features, but reduce the magnitude of parameters $θ_j$. </li>
<li>Regularization works well when we have a lot of slightly useful features.</li>
</ul>
</li>
</ul>
<h2 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170327/184128038.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<ul>
<li>in a single summation $$min_\theta\ \dfrac{1}{2m}\  \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})^2 + \lambda\ \sum_{j=1}^n \theta_j^2$$ 
</li>
</ul>
<p>The λ, or lambda, is the regularization parameter. It determines how much the costs of our theta parameters are inflated.</p>
<h2 id="Regularized-Linear-Regression"><a href="#Regularized-Linear-Regression" class="headerlink" title="Regularized Linear Regression"></a>Regularized Linear Regression</h2><ul>
<li><p>Gradient Descent</p>
 $$\begin{align*} & \text{Repeat}\ \lbrace \newline & \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline & \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2...n\rbrace\newline & \rbrace \end{align*}$$ 
</li>
<li><p>Normal Equation</p>
 $$\begin{align*}& \theta = \left( X^TX + \lambda \cdot L \right)^{-1} X^Ty \newline& \text{where}\ \ L = \begin{bmatrix} 0 & & & & \newline & 1 & & & \newline & & 1 & & \newline & & & \ddots & \newline & & & & 1 \newline\end{bmatrix}\end{align*}$$ 
<ul>
<li>L is a matrix with 0 at the top left and 1’s down the diagonal, with 0’s everywhere else. It should have dimension (n+1)×(n+1)</li>
<li>Recall that if m ≤ n, then $X^TX$ is non-invertible. However, when we add the term λ⋅L, then $X^TX + λ⋅L $becomes invertible.</li>
</ul>
</li>
</ul>
<h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>我在这里整理一下上述两个方法，补全课程上的相关推导。</p>
<h2 id="Logistic-Regression-Model-1"><a href="#Logistic-Regression-Model-1" class="headerlink" title="Logistic Regression Model"></a>Logistic Regression Model</h2><h3 id="h-theta-x-是假设函数"><a href="#h-theta-x-是假设函数" class="headerlink" title="$h_\theta(x)$是假设函数"></a>$h_\theta(x)$是假设函数</h3> $$h_\theta (x) = g ( \theta^T x ) = \dfrac{1}{1 + e^{- \theta^T x}} $$ 
<p>注意假设函数和真实数据之间的区别</p>
<h3 id="Cost-Function-1"><a href="#Cost-Function-1" class="headerlink" title="Cost Function"></a>Cost Function</h3> $$J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large]$$ 
<p>回头看看上边的那个$h_\theta (x)$ ，cost function定义了训练集给出的结果 和 当前计算结果之间的差距。当然，该差距越小越好，那么需要求导一下。</p>
<h3 id="Gradient-Descent-1"><a href="#Gradient-Descent-1" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h3><ul>
<li>原始公式 $$\theta_j := \theta_j - \alpha \dfrac{\partial}{\partial \theta_j}J(\theta)$$ </li>
<li>求导计算 $$\frac{\partial}{\partial \theta_j} J(\theta) = \frac{1}{m}\sum\limits_{i=1}^{m}[(h_\theta (x^{(i)}) - y^{(i)})x_j^{(i)}]$$ </li>
<li>计算结果 $$\theta_j := \theta_j - \frac{\alpha}{m} \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)}) x_j^{(i)} $$ 
</li>
</ul>
<p>这里推导一下$\frac{\partial}{\partial \theta_j} J(\theta)$：</p>
<ul>
<li><p>计算$h_\theta’(x)$导数</p>
 $$\begin{align*} &h_\theta'(x) = ( \frac1{1+e^{- \theta x}})'\newline &\ \ \ \ \ \ \ \  =   \frac{e^{- \theta x}x}{1+e^{- \theta x}}\newline &\ \ \ \ \ \ \ \  =   \frac{1+e^{- \theta x}-1}{(1+e^{- \theta x})^2}x\newline &\ \ \ \ \ \ \ \  =  \large[\frac{1}{1+e^{- \theta x}}-\frac{1}{(1+e^{- \theta x})^2}\large]x\newline &\ \ \ \ \ \ \ \  = h_\theta(x)(1-h_\theta(x))x  \end{align*}$$ 
</li>
<li><p>推导$\frac{\partial}{\partial \theta_j} J(\theta)$</p>
</li>
</ul>
 $$\begin{align*} &\frac{\partial}{\partial \theta_j} J(\theta) = \frac{\partial}{\partial \theta_j}   \frac{1}{m} \sum_{i=1}^m \large[ -y^{(i)}\ \log (h_\theta (x^{(i)})) - (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large] \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \  =   \frac{1}{m} \sum_{i=1}^m \large[ -y^{(i)}\ \frac1{h_\theta(x^{(i)})}h_\theta'(x^{(i)}) - (1 - y^{(i)}) \frac{-1}{1-h_\theta(x^{(i)})}h_\theta'(x^{(i)})\large] \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \  =   \frac{1}{m} \sum_{i=1}^m \large[ -y^{(i)}\ \frac1{h_\theta(x^{(i)})}h_\theta(x^{(i)})(1-h_\theta(x^{(i)}))x^{(i)}  \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ - (1 - y^{(i)}) \frac{-1}{1-h_\theta(x^{(i)})}h_\theta(x^{(i)})(1-h_\theta(x^{(i)}))x^{(i)}\large] \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \  =   \frac{1}{m} \sum_{i=1}^m \large[ -y^{(i)}(1-h_\theta(x^{(i)}) x^{(i)})+(1- y)h_\theta(x^{(i)}) x^{(i)})\large]  \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \  =   \frac{1}{m} \sum_{i=1}^m \large[ -x^{(i)}y^{(i)}+x^{(i)}y^{(i)}h_\theta(x^{(i)}) \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +x^{(i)}h_\theta(x^{(i)}) - x^{(i)}y^{(i)}h_\theta(x^{(i)}) \large] \newline &\ \ \ \ \ \ \ \ \ \ \ \ \ \  = \frac{1}{m}\sum\limits_{i=1}^{m}[(h_\theta (x^{(i)}) - y^{(i)})x_j^{(i)}] \end{align*}$$ 
<p>即：<br> $$\begin{align*} &\frac{\partial}{\partial \theta_j} J(\theta) = \frac{1}{m}\sum\limits_{i=1}^{m}[(h_\theta (x^{(i)}) - y^{(i)})x_j^{(i)}] \end{align*}$$ </p>
<h2 id="Solving-the-Problem-of-Overfitting-1"><a href="#Solving-the-Problem-of-Overfitting-1" class="headerlink" title="Solving the Problem of Overfitting"></a>Solving the Problem of Overfitting</h2><p>其他地方都一样，稍作修改</p>
<h3 id="Cost-Function-2"><a href="#Cost-Function-2" class="headerlink" title="Cost Function"></a>Cost Function</h3> $$J(\theta) = - \frac{1}{m} \sum_{i=1}^m \large[ y^{(i)}\ \log (h_\theta (x^{(i)})) + (1 - y^{(i)})\ \log (1 - h_\theta(x^{(i)}))\large] + \frac{\lambda}{2m}\sum_{j=1}^n \theta_j^2$$ 
<h3 id="Gradient-Descent-2"><a href="#Gradient-Descent-2" class="headerlink" title="Gradient Descent"></a>Gradient Descent</h3> $$\begin{align*} & \text{Repeat}\ \lbrace \newline & \ \ \ \ \theta_0 := \theta_0 - \alpha\ \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_0^{(i)} \newline & \ \ \ \ \theta_j := \theta_j - \alpha\ \left[ \left( \frac{1}{m}\ \sum_{i=1}^m (h_\theta(x^{(i)}) - y^{(i)})x_j^{(i)} \right) + \frac{\lambda}{m}\theta_j \right] &\ \ \ \ \ \ \ \ \ \ j \in \lbrace 1,2...n\rbrace\newline & \rbrace \end{align*}$$ 
<hr>
<p>以上</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本节笔记对应&lt;a href=&quot;https://www.coursera.org/learn/machine-learning/home/week/3&quot;&gt;第三周Coursera课程&lt;/a&gt;  &lt;strong&gt;binary classification problem&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(3)-Multivariate Linear Regression python实现</title>
    <link href="http://feiyang.li/2017/03/26/Coursera-ML-3-Multivariate-Linear-Regression-python/index.html"/>
    <id>http://feiyang.li/2017/03/26/Coursera-ML-3-Multivariate-Linear-Regression-python/index.html</id>
    <published>2017-03-26T11:00:29.000Z</published>
    <updated>2017-03-27T11:32:14.121Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>Multivariate Linear Regression and Programming Exercise 1</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="Gradient-Descent-for-Multiple-Variables"><a href="#Gradient-Descent-for-Multiple-Variables" class="headerlink" title="Gradient Descent for Multiple Variables"></a>Gradient Descent for Multiple Variables</h1><ul>
<li>Suppose we have n variables, set hypothesis to be:</li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/192353908.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<ul>
<li><p>Cost Function</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/192415558.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
<li><p>Gradient Descent  Algorithm</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/192709947.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>Get every feature into approximately [-1, 1]. Just normalize all the parameters :)</p>
</li>
<li><p>Learning Rate:Not too big(fail to converge), not too small(too slow)</p>
</li>
<li>Polynormal Regression:Use feature scalling. (Somewhat like normalizing dimension)</li>
</ul>
<h1 id="Programming-Exercise-1"><a href="#Programming-Exercise-1" class="headerlink" title="Programming Exercise 1"></a>Programming Exercise 1</h1><h2 id="下载程序及相关数据"><a href="#下载程序及相关数据" class="headerlink" title="下载程序及相关数据"></a>下载程序及相关数据</h2><p>Stanford coursera Andrew Ng 机器学习课程编程作业（Exercise 1），作业下载链接貌似被墙了，下载链接放这。<br><a href="http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex1.zip" target="_blank" rel="external">http://home.ustc.edu.cn/~mmmwhy/machine-learning-ex1.zip</a></p>
<h2 id="重新推导一下："><a href="#重新推导一下：" class="headerlink" title="重新推导一下："></a>重新推导一下：</h2><p>其实这里一共就两个式子：</p>
<ul>
<li><p>computeCost</p>
 
$$h_\theta (x) = \theta_0 + \theta_1 x_1 + \theta_2 x_2 + \theta_3 x_3 + \cdots + \theta_n x_n$$
$$J(\theta_0,\theta_1 )=\frac1{wm} \sum_{i=1}^{m}(h_{\theta}(x^{(i)})-y^{(i)})^w$$
 
</li>
<li><p>gradientDescent</p>
 
 $$\begin{align*} \text{repeat until convergence: } \lbrace & \newline \theta_0 := & \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i}) \newline \theta_1 := & \theta_1 - \alpha \frac1m \sum\limits_{i=1}^m\left((h_\theta(x_i) - y_i) x_i\right) \newline \rbrace& \end{align*}$$
 
</li>
</ul>
<h2 id="python拟合实现代码"><a href="#python拟合实现代码" class="headerlink" title="python拟合实现代码"></a>python拟合实现代码</h2><p>原本用的是matlab代码，我用python实现了一下，结果是一样的：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">(path)</span>:</span></div><div class="line">    X=[]</div><div class="line">    y=[]</div><div class="line">    <span class="keyword">with</span> open(path,<span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">            X.append([<span class="number">1</span>,float(line.split(<span class="string">','</span>)[<span class="number">0</span>])])</div><div class="line">            y.append(float(line.split(<span class="string">','</span>)[<span class="number">1</span>]))</div><div class="line">    <span class="keyword">return</span> X,y</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dataplot</span><span class="params">(x,theta,y)</span>:</span></div><div class="line">    plt.plot(x, y, <span class="string">'rx'</span>, markersize=<span class="number">10</span>)</div><div class="line">    plt.ylabel(<span class="string">'Profit in $10,000s'</span>)</div><div class="line">    plt.xlabel(<span class="string">'Population of City in 10,000s'</span>)</div><div class="line">    plt.plot(X[:,<span class="number">1</span>],X*theta,<span class="string">'-'</span>)</div><div class="line">    plt.show()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">computeCost</span><span class="params">(X,y,theta)</span>:</span></div><div class="line">    m = len(y)</div><div class="line">    J = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</div><div class="line">        J = J + float((X[i]*theta-y[i])**<span class="number">2</span>)</div><div class="line">    <span class="keyword">return</span> J/(<span class="number">2</span>*m)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gradientDescent</span><span class="params">(X, y, theta, alpha, num_iters)</span>:</span></div><div class="line">    m = len(y)</div><div class="line">    num_iters = <span class="number">1500</span></div><div class="line">    J_history = np.zeros(num_iters)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_iters):</div><div class="line">        S =X.T * (X * theta - np.mat(y).T) / m</div><div class="line">        theta = theta - alpha * S;</div><div class="line">        J_history[i] = computeCost(X,y,theta)</div><div class="line">    <span class="keyword">return</span> theta</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">    theta = np.mat([[<span class="number">0</span>],[<span class="number">0</span>]])</div><div class="line">    iterations = <span class="number">1500</span></div><div class="line">    alpha = <span class="number">0.01</span></div><div class="line">    iterations = <span class="number">1500</span></div><div class="line">    path = <span class="string">"C:\Users\wing\Documents\MATLAB\ex1\ex1data1.txt"</span></div><div class="line">    </div><div class="line">    x,y = readfile(path)<span class="comment"># 小写的X不是矩阵，是list，大写的X是矩阵。</span></div><div class="line">    X = np.mat(x)</div><div class="line">    J = computeCost(X, y, theta)</div><div class="line">    theta = gradientDescent(X, y, theta, alpha, iterations)</div><div class="line">    dataplot(X[:,<span class="number">1</span>],theta,y)</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170326/171141428.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure> 
<p>输出的图有点小，就这样吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Multivariate Linear Regression and Programming Exercise 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Coursera ML(2)-Model and Cost Function</title>
    <link href="http://feiyang.li/2017/03/25/Coursera-ML-2-Model-and-Cost-Function/index.html"/>
    <id>http://feiyang.li/2017/03/25/Coursera-ML-2-Model-and-Cost-Function/index.html</id>
    <published>2017-03-25T10:49:36.000Z</published>
    <updated>2017-03-27T11:35:22.375Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>Model and Cost Function / Parameter Learning / Gradient Descent For Linear Regression</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="Model-and-Cost-Function"><a href="#Model-and-Cost-Function" class="headerlink" title="Model and Cost Function"></a>Model and Cost Function</h1><table>
<thead>
<tr>
<th style="text-align:center">Tables</th>
<th style="text-align:center">Are</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Hypothesis</td>
<td style="text-align:center">$$h_{\theta}={\theta}_0+{\theta}_1x$$</td>
</tr>
<tr>
<td style="text-align:center">Parameter</td>
<td style="text-align:center">${\theta}_0$，${\theta}_1$</td>
</tr>
<tr>
<td style="text-align:center">Cost Function</td>
<td style="text-align:center"> $J(\theta_0,\theta_1)= \frac1{2m}\sum_{i=1}^m(h_{\theta}(x^i)-y^i)^w$ </td>
</tr>
<tr>
<td style="text-align:center">Goal</td>
<td style="text-align:center">$minimiseJ(\theta_0,\theta_1)$</td>
</tr>
</tbody>
</table>
<h2 id="Model-Representation"><a href="#Model-Representation" class="headerlink" title="Model Representation"></a>Model Representation</h2><ul>
<li>Hypothesis:<br>$$h_{\theta}={\theta}_0+{\theta}_1x$$<br>${\theta}_0$和${\theta}_1$称为模型参数</li>
</ul>
<h2 id="Cost-Function"><a href="#Cost-Function" class="headerlink" title="Cost Function"></a>Cost Function</h2><p>We can measure the accuracy of our hypothesis function by using a <strong>cost function</strong>. his takes an average difference (actually a fancier version of an average) of all the results of the hypothesis with inputs from x’s and the actual output y’s. 如何尽可能的将直线与我们的数据相拟合</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/211048488.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/134518022.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h1 id="Parameter-Learning"><a href="#Parameter-Learning" class="headerlink" title="Parameter Learning"></a>Parameter Learning</h1><h2 id="Gradient-descent-idea"><a href="#Gradient-descent-idea" class="headerlink" title="Gradient descent idea"></a>Gradient descent idea</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/152030096.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<blockquote>
<p>Turns out, that if you’re standing at that point on the hill, you look all around and you find that the best direction is to take a little step downhill is roughly that direction. Okay, and now you’re at this new point on your hill. You’re gonna, again, look all around and say what direction should I step in order to take a little baby step downhill? And if you do that and take another step, you take a step in that direction. </p>
</blockquote>
<h2 id="Gradient-descent-algorithm"><a href="#Gradient-descent-algorithm" class="headerlink" title="Gradient descent algorithm"></a>Gradient descent algorithm</h2><p>repeat until convergence:{<br>    $\theta_j:=\theta_j-\alpha\frac\partial{\partial\theta_j}J(\theta_0,\theta_1)$<br>}</p>
<ul>
<li>use <strong>:=</strong> to denote assignment, so it’s the assignment operator.</li>
<li>$\alpha$ called:learning rate.controls how big a step we take downhill with creating descent. </li>
<li>$\theta_0,\theta_1 $should be updated simultaneously(using multiple temp var should work!)<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/154825347.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
</li>
</ul>
<h1 id="Gradient-Descent-For-Linear-Regression"><a href="#Gradient-Descent-For-Linear-Regression" class="headerlink" title="Gradient Descent For Linear Regression"></a>Gradient Descent For Linear Regression</h1>
 $$\begin{align*} \text{repeat until convergence: } \lbrace & \newline \theta_0 := & \theta_0 - \alpha \frac{1}{m} \sum\limits_{i=1}^{m}(h_\theta(x_{i}) - y_{i}) \newline \theta_1 := & \theta_1 - \alpha \frac1m \sum\limits_{i=1}^m\left((h_\theta(x_i) - y_i) x_i\right) \newline \rbrace& \end{align*}$$

<p> where m is the size of the training set, $\theta_0$ a constant that will be changing simultaneously with $\theta_1$  and $x_i y_i$are values of the given training set (data).</p>
<center><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170325/182301586.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></center>

<ul>
<li><p>The $J(θ_0,θ_1)$ is a convex function, which means it has only one global minimun, which means gradient descent will always hit the best fit</p>
</li>
<li><p>“Batch” Gradient Descent: “Batch” means the algo is trained from all the samples every time</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Model and Cost Function / Parameter Learning / Gradient Descent For Linear Regression&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Coursera ML" scheme="http://feiyang.li/categories/Coursera-ML/"/>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="读书笔记" scheme="http://feiyang.li/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>算法导论 第15章 动态规划</title>
    <link href="http://feiyang.li/2017/03/24/dynamic-programming/index.html"/>
    <id>http://feiyang.li/2017/03/24/dynamic-programming/index.html</id>
    <published>2017-03-24T09:05:47.000Z</published>
    <updated>2017-03-24T09:26:24.294Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>《算法导论》这门课的老师是<a href="http://cs.ustc.edu.cn/szdw/bdjs/201006/t20100614_22062.html" target="_blank" rel="external">黄刘生</a>和张曙，两位都是老人家了，代课很慢很没有激情，不过这一章非常有意思。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>书中列举四个常见问题，分析如何采用动态规划方法进行解决。<br>　　装配线调度问题<br>　　矩阵链乘问题：<br>　　最长公共子序列问题：<br>　　最优二叉查找树问题：</p>
<h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p><strong>动态规划</strong>通常应用于最优化问题，此类问题可能包含多个可行解。每个解有一个值，而我们期望找到<strong>最大</strong>或者<strong>最小</strong>的解。</p>
<h2 id="动态规划算法的设计可以分为以下4个步骤："><a href="#动态规划算法的设计可以分为以下4个步骤：" class="headerlink" title="动态规划算法的设计可以分为以下4个步骤："></a>动态规划算法的设计可以分为以下4个步骤：</h2><ul>
<li>描述最优解的结构。</li>
<li>递归定义最优解的值。</li>
<li>按自底向上的方式计算最优解的值。（其实还应该有自顶向下的求解）</li>
<li>由计算出的结果构造一个最优解。</li>
</ul>
<p>动态规划算法效率会非常高的原因在于，其特殊的<strong>实现方法</strong>，也就是第三步。</p>
<h2 id="两种等价的实现方法："><a href="#两种等价的实现方法：" class="headerlink" title="两种等价的实现方法："></a>两种等价的实现方法：</h2><ul>
<li><strong>带备忘的自顶向下法</strong>，此方法按照正常的递归编写过程，但过程会保存每个子问题的解（通常保存在一个数组或散列表中）。当需要一个子问题的解时，程序首先检查是否已经保存过此解。如果是，直接返回；若不是，递归计算这个子问题。这种递归方式是<strong>带备忘的</strong>。</li>
<li><strong>自底而上法</strong>，这种方法需要恰当的定义子问题的<strong>规模</strong>，因为任何一个子问题的求解的依赖着<strong>更小的</strong>子问题。因此需要将问题进行排序，从小的问题开始处理。这样可以确保，在处理到大的问题时，其所依赖的更小的子问题已经求解完毕，结果已经保存。</li>
</ul>
<p>因此，我们会说  动态规划算法属于典型的用<strong>空间换取时间</strong>。由于没有频繁的递归函数的开销，自底而上方法的时间复杂度会更好一些。</p>
<h2 id="动态规划与分治法之间的区别："><a href="#动态规划与分治法之间的区别：" class="headerlink" title="动态规划与分治法之间的区别："></a>动态规划与分治法之间的区别：</h2><ul>
<li>分治法是指将问题分成一些独立的子问题，递归的求解各子问题。</li>
<li>动态规划适用于这些子问题不是独立的情况，也就是各子问题包含公共子问题。</li>
</ul>
<h1 id="动态规划基础"><a href="#动态规划基础" class="headerlink" title="动态规划基础"></a>动态规划基础</h1><p>什么时候可以使用动态规范方法解决问题呢？这个问题需要讨论一下，书中给出了采用动态规范方法的最优化问题中的两个要素：<strong>最优子结构</strong>和<strong>重叠子结构</strong>。</p>
<h2 id="最优子结构（自下向上）"><a href="#最优子结构（自下向上）" class="headerlink" title="最优子结构（自下向上）"></a>最优子结构（自下向上）</h2><p>最优子结构是指问题的一个最优解中包含了其子问题的最优解。在动态规划中，每次采用子问题的最优解来构造问题的一个最优解。</p>
<h3 id="寻找最优子结构，遵循的共同的模式："><a href="#寻找最优子结构，遵循的共同的模式：" class="headerlink" title="寻找最优子结构，遵循的共同的模式："></a>寻找最优子结构，遵循的共同的模式：</h3><ul>
<li><p>问题的一个解可以是做一个选择，得到一个或者多个有待解决的子问题。</p>
</li>
<li><p>假设对一个给定的问题，已知的是一个可以导致最优解的选择，不必关心如何确定这个选择。</p>
</li>
<li><p>在已知这个选择后，要确定哪些子问题会随之发生，如何最好地描述所得到的子问题空间。</p>
</li>
<li><p>利用“剪贴”技术，来证明问题的一个最优解中，使用的子问题的解本身也是最优的。</p>
</li>
</ul>
<h3 id="最优子结构在问题域中以两种方式变化："><a href="#最优子结构在问题域中以两种方式变化：" class="headerlink" title="最优子结构在问题域中以两种方式变化："></a>最优子结构在问题域中以两种方式变化：</h3><ul>
<li>有多少个子问题被使用在原问题的一个最优解中。</li>
<li>在决定一个最优解中使用哪些子问题时有多少个选择。</li>
</ul>
<p>动态规划按照自底向上的策略利用最优子结构，即：<strong>首先找到子问题的最优解，解决子问题，然后逐步向上找到问题的一个最优解</strong>。</p>
<p>为了描述子问题空间，可以遵循这样一条有效的经验规则，就是尽量保持这个空间简单，然后在需要时再扩充它。</p>
<p>注意：在不能应用最优子结构的时候，就一定不能假设它能够应用。 <strong>警惕使用动态规划去解决缺乏最优子结构的问题！</strong></p>
<p>使用动态规划时，子问题之间必须是相互独立的！可以这样理解，N个子问题域互不相干，属于完全不同的空间。</p>
<h2 id="重叠子问题（自上向下）"><a href="#重叠子问题（自上向下）" class="headerlink" title="重叠子问题（自上向下）"></a>重叠子问题（自上向下）</h2><p>用来解决原问题的递归算法可以反复地解同样的子问题，而不是总是产生新的子问题。</p>
<p>重叠子问题是指当一个递归算法不断地调用同一个问题。</p>
<p>动态规划算法总是充分利用重叠子问题，通过每个子问题只解一次，把解保存在一个需要时就可以查看的表中，每次查表的时间为常数。</p>
<p>由计算出的结果反向构造一个最优解：把动态规划或者是递归过程中作出的每一次选择（记住：保存的是每次作出的选择）都保存下来，在最后就一定可以通过这些保存的选择来反向构造出最优解。</p>
<p>做备忘录的递归方法：这种方法是动态规划的一个变形，它本质上与动态规划是一样的，但是比动态规划更好理解！<br>　　（1） 使用普通的递归结构，自上而下的解决问题。<br>　　（2） 当在递归算法的执行中每一次遇到一个子问题时，就计算它的解并填入一个表中。以后每次遇到该子问题时，只要查看并返回表中先前填入的值即可。</p>
<h1 id="钢条切割问题"><a href="#钢条切割问题" class="headerlink" title="钢条切割问题"></a>钢条切割问题</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p> 给定一个长度为n的钢条，以及一个价格表p，p中列出了每英寸钢条的价格，将长度为n的钢条切割为若干短钢条出售，求一个钢条的切割方案，使得收益最大，切割工序没有成本。比如价格表p如下：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170323/194427893.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>长度为n的钢条，一共有$2^{n-1}$种不同的切割方案，因为可以再距离钢条左边为i（i=1,2,…,n-1）处，我们总是可以选择切割或者不切割。比如下图表示了n=4的切割情况：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170323/195029493.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure>
<h2 id="理论依据"><a href="#理论依据" class="headerlink" title="理论依据"></a>理论依据</h2><p>我们称钢条切割问题满足<strong>最优子结构</strong>性质：问题的最优解由相关子问题的最优解组合而成，而这些子问题可以独立求解。</p>
<p>我们可以这样理解钢条问题：将钢条从左边切下一段长度为i的一段，对剩下的n-i的部分继续进行切割（递归求解），而不对左边长度为i的一段在进行切割。</p>
<p><img src="http://cdn.mmmxcc.cn/blog/20170324/172614530.png" alt=""></p>
<p>这样问题的解就转化为最优解了。</p>
<h2 id="自顶向下递归实现"><a href="#自顶向下递归实现" class="headerlink" title="自顶向下递归实现"></a>自顶向下递归实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CUT-ROD(p,n)</div><div class="line"><span class="keyword">if</span>  n == <span class="number">0</span></div><div class="line">    <span class="keyword">return</span>  <span class="number">0</span></div><div class="line">q = -∞</div><div class="line"><span class="keyword">for</span>  i = <span class="number">1</span> to n</div><div class="line">   q = max(q,  p[i]+CUT-ROD(p, n-i))</div><div class="line"><span class="keyword">return</span>  q</div></pre></td></tr></table></figure>
<p>  CUT-ROD的效率很差，这是因为CUT-ROD反复的求解一些相同的子问题，下图显示了当n==4时的调用情况：<br>  <img src="http://cdn.mmmxcc.cn/blog/20170323/200833676.png" alt="mark"></p>
<h2 id="带备忘的自顶向下"><a href="#带备忘的自顶向下" class="headerlink" title="带备忘的自顶向下"></a>带备忘的自顶向下</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">MEMOIZED-CUT-ROD(p,n)</div><div class="line">let  r[<span class="number">0.</span>.n] be a <span class="keyword">new</span> <span class="built_in">array</span></div><div class="line"><span class="keyword">for</span>  i = <span class="number">0</span> to n</div><div class="line">    r[i]= -∞</div><div class="line"><span class="keyword">return</span>  MEMOIZED-CUT-ROD-AUX(p, n, r)</div><div class="line"> </div><div class="line">MEMOIZED-CUT-ROD-AUX(p,n, r)</div><div class="line"><span class="keyword">if</span>  r[n] &gt;= <span class="number">0</span></div><div class="line">    <span class="keyword">return</span>  r[n]</div><div class="line"><span class="keyword">if</span>  n == <span class="number">0</span></div><div class="line">    q = <span class="number">0</span></div><div class="line"><span class="keyword">else</span>  q = -∞</div><div class="line">    <span class="keyword">for</span>  i = <span class="number">1</span> to n</div><div class="line">        q= max(q,  p[i]+MEMOIZED-CUT-ROD-AUX(p, n-i,r))</div><div class="line">r[n] = q</div><div class="line"><span class="keyword">return</span> q</div></pre></td></tr></table></figure>
<p>该方法与之前的普通递归方法类似，只是会在过程中保存子问题的解，当需要一个子问题的解的时候，先查看是否已经保存过了，如果是，则直接使用即可。否则，按常规的递归方式计算子问题。所以称为带备忘的，因为它记住了之前已经计算出的结果。</p>
<h2 id="自底向上的方法"><a href="#自底向上的方法" class="headerlink" title="自底向上的方法"></a>自底向上的方法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">BOTTOM-UP-CUT-ROD(p,n)</div><div class="line">let  r[<span class="number">0.</span>.n] be a <span class="keyword">new</span> <span class="built_in">array</span></div><div class="line">r[<span class="number">0</span>]= <span class="number">0</span></div><div class="line"><span class="keyword">for</span>  j = <span class="number">1</span> to n</div><div class="line">    q= -∞</div><div class="line">    <span class="keyword">for</span>  i = <span class="number">1</span> to j</div><div class="line">        q = max(q, p[i]+r[j-i])</div><div class="line">    r[j]= q</div><div class="line"><span class="keyword">return</span>  r[n]</div></pre></td></tr></table></figure>
<p>方法采用子问题的自然顺序，因此过程中依次求解规模为$j=0,1,2,3,4…,n$的问题。             </p>
<p>这两种算法具有相同的时间复杂度，BOTTOM-UP-CUT-ROD主要是双层嵌套循环，所以时间复杂度$Θ(n^2)$。MEMOIZED-CUT-ROD的时间复杂度也是$Θ(n^2)$。可以使用子问题图进行分析。</p>
<h2 id="python实现切割钢条问题"><a href="#python实现切割钢条问题" class="headerlink" title="python实现切割钢条问题"></a>python实现切割钢条问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_rod</span><span class="params">()</span>:</span></div><div class="line">    p = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">17</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">30</span>]</div><div class="line">    n = len(p)</div><div class="line">    r = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</div><div class="line">    s = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</div><div class="line">        q = <span class="number">-10</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(j+<span class="number">1</span>):</div><div class="line">            <span class="keyword">if</span> q &lt; (p[i]+r[j-i]):</div><div class="line">                q = (p[i]+r[j-i])</div><div class="line">                s[j] = i</div><div class="line">            <span class="comment">#q = max(q,p[i]+r[j-i])</span></div><div class="line">        r[j] = q</div><div class="line">        </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_way</span><span class="params">(n)</span>:</span></div><div class="line">    cut_rod()</div><div class="line">    print(n,<span class="string">'---&gt;'</span>,r[n])</div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        print(s[n])</div><div class="line">        n = n - s[n]</div></pre></td></tr></table></figure>
<p>调用<code>find_way(9)</code>输出</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170324/145547041.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h1 id="矩阵链乘法"><a href="#矩阵链乘法" class="headerlink" title="矩阵链乘法"></a>矩阵链乘法</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><p>给定n 个矩阵的序列，希望求它们的乘积：$A_1A_2A_3…A_n$ 。因为矩阵的乘法满足结合律，所以可以对n个矩阵序列加括号，来改变乘积顺序。比如对于矩阵链&lt; $A_1$, $A_2$,$A_3$,$A_4$&gt;可以有下面的加括号方案：</p>
<p><center><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170324/150009279.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><center></center></center></p>
<p>不同的加括号的方案，对于乘积运算的代价影响很大.</p>
<p>两个矩阵相乘，A为p <em> q矩阵，B为q </em> r矩阵。所以A 的乘法次数为p<em>q</em>r。</p>
<p>如果A（10,100 ），B（100,5）， C（5,50 ）三个矩阵相乘。</p>
<p>如果按照((AB)C)的顺序，则需要10<em>100</em>5  + 10<em>5</em>50  = 7500次乘法运算，如果按照(A(BC))的顺序，则需要100<em>5</em>50  + 10<em>100</em>50  = 75000次乘法运算。所以，不同的加括号方案，对于矩阵链乘法的代价影响很大。</p>
<h2 id="刻画最优解的结构特征"><a href="#刻画最优解的结构特征" class="headerlink" title="刻画最优解的结构特征"></a>刻画最优解的结构特征</h2><p>通过寻找最优子结构，利用最优子结构从子问题的最优解中构造出原问题的最优解。<br>假设$A<em>iA</em>{i+1}…A_j$的最优括号花方案的分割点是在$A<em>k$和$A</em>{K+1}$之间，一个非平凡的矩阵链乘法任何时候都是需要划分链的，<strong>任何最优解都是有子问题的最优解构成的</strong>。</p>
<h2 id="递归的定义最优解的值"><a href="#递归的定义最优解的值" class="headerlink" title="递归的定义最优解的值"></a>递归的定义最优解的值</h2><p>令 $m[i,j]$ 表示计算矩阵 $A<em>{i,j}$ 所需标量乘法的最小值，也即原问题的最优解，计算 $A</em>{1..n}$ 的最低代价就是 $m[1,n]$。</p>
<ul>
<li>对于i == j 的平凡问题，矩阵链只包含唯一的矩阵$A_{i,j}$。</li>
<li>对于$A<em>iA</em>{i+1}…A_j$的最优括号化方案的切割点在$A<em>k$和$A</em>{k+1}$之间。那么$m[i,j]$的解相当于计算$A<em>{i..k}$和$A</em>{k+1..j}$的代价加上，合并这两个子答案所需要的代价$p_{i-1}p_k p_j$</li>
</ul>
<p>因此，我们得到</p>
<p>$$m[i,j] = m[i,k]+m[k,j]+p_{i-1}p_k p_j$$</p>
<h2 id="计算最优解的值"><a href="#计算最优解的值" class="headerlink" title="计算最优解的值"></a>计算最优解的值</h2><p>算法应当按照长度递增的顺序求解矩阵链括号化问题，并按照对应的顺序填写表m。对举证连$A_{i,j}$，其规模为链的长度j-i+1</p>
<p>伪代码就不写了，直接写python代码</p>
<h2 id="python实现矩阵链乘法问题"><a href="#python实现矩阵链乘法问题" class="headerlink" title="python实现矩阵链乘法问题"></a>python实现矩阵链乘法问题</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">MATRIX_CHAIN_ORDER</span><span class="params">(p)</span>:</span>  </div><div class="line">    n = len(p)  </div><div class="line">    s = [[<span class="number">0</span> <span class="keyword">for</span> j <span class="keyword">in</span> range(n)] <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]  </div><div class="line">    m = [[<span class="number">0</span> <span class="keyword">for</span> j <span class="keyword">in</span> range(n)] <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]  </div><div class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">2</span>, n):           <span class="comment">#l is the chain length  </span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n-l+<span class="number">1</span>):  </div><div class="line">            j = i + l - <span class="number">1</span>  </div><div class="line">            m[i][j] = <span class="number">1e9</span>  </div><div class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j):  </div><div class="line">                q = m[i][k] + m[k+<span class="number">1</span>][j] + p[i<span class="number">-1</span>]*p[k]*p[j]  </div><div class="line">                <span class="keyword">if</span> q &lt; m[i][j]:  </div><div class="line">                    m[i][j] = q  </div><div class="line">                    s[i][j] = k  </div><div class="line">    PRINT_OPTIMAL_PARENS(s, <span class="number">1</span>, n<span class="number">-1</span>)</div><div class="line">    <span class="keyword">return</span> m</div><div class="line">    </div><div class="line">      </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">PRINT_OPTIMAL_PARENS</span><span class="params">(s, i, j)</span>:</span>  </div><div class="line">    <span class="keyword">if</span> i == j:  </div><div class="line">        print(<span class="string">'A'</span>, end = <span class="string">''</span>)  </div><div class="line">        print(i, end = <span class="string">''</span>)  </div><div class="line">    <span class="keyword">else</span>:  </div><div class="line">        print(<span class="string">'('</span>, end = <span class="string">''</span>)  </div><div class="line">        PRINT_OPTIMAL_PARENS(s, i, s[i][j])  </div><div class="line">        PRINT_OPTIMAL_PARENS(s, s[i][j]+<span class="number">1</span>, j)  </div><div class="line">        print(<span class="string">')'</span>, end = <span class="string">''</span>)  </div><div class="line">   </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    A = [<span class="number">30</span>, <span class="number">35</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>,<span class="number">25</span>]</div><div class="line">    m = MATRIX_CHAIN_ORDER(A) </div><div class="line">    print(<span class="string">'\n'</span>,<span class="string">'共计需要'</span>,m[<span class="number">1</span>][n<span class="number">-1</span>],<span class="string">'次相乘'</span>)</div></pre></td></tr></table></figure>
<p>需要注意的问题是，这个算法的复杂度在O(n∧3)。而且这个算法和算法导论等地方的伪码比有些细微的差异体现在数组从0开始还是1开始上。大体上还是一致的。这里的空间复杂度也到了O(n∧2)。大致的计算顺序就是通过这个函数中的l来控制。l=2的时候，依次计算矩阵A[0]<em>A[1], A[1]</em>A[2], A[2]<em>A[3]…的次数。l=3的时候就开始计算A[0]</em>A[1]<em>A[2], A[1]</em>A[2]*A[3]..的次数。用更形象的话来说就是倒三角的顺序。下面的这个图就是对上面流程的描述：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170324/171007882.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<hr>
<p>以上</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;《算法导论》这门课的老师是&lt;a href=&quot;http://cs.ustc.edu.cn/szdw/bdjs/201006/t20100614_22062.html&quot;&gt;黄刘生&lt;/a&gt;和张曙，两位都是老人家了，代课很慢很没有激情，不过这一章非常有意思。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
      <category term="Algorithms" scheme="http://feiyang.li/tags/Algorithms/"/>
    
      <category term="dynamic programming" scheme="http://feiyang.li/tags/dynamic-programming/"/>
    
  </entry>
  
  <entry>
    <title>Python读取mnist</title>
    <link href="http://feiyang.li/2017/03/17/python-mnist/index.html"/>
    <id>http://feiyang.li/2017/03/17/python-mnist/index.html</id>
    <published>2017-03-17T08:25:27.000Z</published>
    <updated>2017-03-26T11:39:21.829Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>在做 TensorFlow和Python实现神经网络的时候，需要利用到一个MNIST数据集，数据集的格式是以<code>.idx1-ubyte</code>后缀，包含60000个训练图像。将这些图像展示出来，需要利用到<a href="http://feiyang.li/2017/03/17/python-struct/">struct模块</a>。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="下载MNIST训练数据集"><a href="#下载MNIST训练数据集" class="headerlink" title="下载MNIST训练数据集"></a>下载MNIST训练数据集</h1><h2 id="手动下载"><a href="#手动下载" class="headerlink" title="手动下载"></a>手动下载</h2><p>下载链接为： <a href="http://yann.lecun.com/exdb/mnist/" target="_blank" rel="external">http://yann.lecun.com/exdb/mnist/</a>  下载好之后解压就可以了，网站好像被墙了？</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170317/110144292.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure>
<h2 id="使用tensorflow自带下载"><a href="#使用tensorflow自带下载" class="headerlink" title="使用tensorflow自带下载"></a>使用tensorflow自带下载</h2><p>可以看到，这个地方是有监督学习   (有label这个东西嘛)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</div><div class="line"><span class="comment"># 下载mnist数据集</span></div><div class="line">mnist = input_data.read_data_sets(<span class="string">'/tmp/'</span>, one_hot=<span class="keyword">True</span>)</div><div class="line"><span class="comment"># 数字(label)只能是0-9，神经网络使用10个出口节点就可以编码表示0-9；</span></div><div class="line"><span class="comment">#  1 -&gt; [0,1.0,0,0,0,0,0,0,0]   one_hot表示只有一个出口节点是hot</span></div><div class="line"><span class="comment">#  2 -&gt; [0,0.1,0,0,0,0,0,0,0]</span></div><div class="line"><span class="comment">#  5 -&gt; [0,0,0,0,0,1.0,0,0,0]</span></div><div class="line"><span class="comment">#  /tmp是macOS的临时目录，重启系统数据丢失; Linux的临时目录也是/tmp</span></div></pre></td></tr></table></figure></p>
<h1 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h1><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">with</span> open(filename ,<span class="string">'rb'</span>) <span class="keyword">as</span> f1:</div><div class="line">    buf1 = f1.read()</div></pre></td></tr></table></figure>
<p>还有另外一种常用的方法，两个方法目前来看没有什么区别。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f1 = open(filename , <span class="string">'rb'</span>)</div><div class="line">buf = binfile.read() <span class="comment"># 先使用二进制方式把文件都读进来</span></div></pre></td></tr></table></figure></p>
<h2 id="跨过头部区域"><a href="#跨过头部区域" class="headerlink" title="跨过头部区域"></a>跨过头部区域</h2><h3 id="train-images-idx3-ubyte"><a href="#train-images-idx3-ubyte" class="headerlink" title="train-images-idx3-ubyte"></a>train-images-idx3-ubyte</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">TRAINING SET IMAGE FILE (train-images-idx3-ubyte):</div><div class="line"></div><div class="line">[offset] [type]          [value]          [description] </div><div class="line">0000     32 bit integer  0x00000803(2051) magic number </div><div class="line">0004     32 bit integer  60000            number of images </div><div class="line">0008     32 bit integer  28               number of rows </div><div class="line">0012     32 bit integer  28               number of columns </div><div class="line">0016     unsigned byte   ??               pixel </div><div class="line">0017     unsigned byte   ??               pixel </div><div class="line">........ </div><div class="line">xxxx     unsigned byte   ??               pixel</div></pre></td></tr></table></figure>
<p>可以看到头部有4个integer 类型，设置<code>image_index += struct.calcsize(&#39;&gt;IIII&#39;)</code>计算4个integer 值的位置，然后image_index 直接跳过去。至于为什么用<a href="http://feiyang.li/2017/03/17/python-struct/">IIII</a>，愿意的话可以点击了解。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">temp = struct.unpack_from(<span class="string">'&gt;784B'</span>, buf1, image_index) </div><div class="line"><span class="comment"># '&gt;784B'的意思就是用大端法读取784( 28*28 )个unsigned byte</span></div><div class="line">im = np.reshape(temp,(<span class="number">28</span>,<span class="number">28</span>))</div></pre></td></tr></table></figure>
<p>最后那句<code>np.reshape(temp,(28,28))</code>是以下两句的缩写<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">im = np.array(im)</div><div class="line">im = im.reshape(<span class="number">28</span>,<span class="number">28</span>)</div></pre></td></tr></table></figure></p>
<h3 id="train-labels-idx1-ubyte"><a href="#train-labels-idx1-ubyte" class="headerlink" title="train-labels-idx1-ubyte"></a>train-labels-idx1-ubyte</h3><p>可以看到头部有2个integer 类型，同理，label_index 直接跳过去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">TRAINING SET LABEL FILE (train-labels-idx1-ubyte):</div><div class="line"></div><div class="line">[offset] [type]          [value]          [description] </div><div class="line">0000     32 bit integer  0x00000801(2049) magic number (MSB first) </div><div class="line">0004     32 bit integer  60000            number of items </div><div class="line">0008     unsigned byte   ??               label </div><div class="line">0009     unsigned byte   ??               label </div><div class="line">........ </div><div class="line">xxxx     unsigned byte   ??               label</div><div class="line">The labels values are 0 to 9.</div></pre></td></tr></table></figure></p>
<h2 id="显示图片"><a href="#显示图片" class="headerlink" title="显示图片"></a>显示图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.imshow(im , cmap=<span class="string">'gray'</span>)</div></pre></td></tr></table></figure>
<p>应该就可以看到图片了，是一张5， 当然头部文件还是要有的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">%matplotlib inline</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line">path = <span class="string">'E:\\Machine Learning\\train-images.idx3-ubyte'</span></div><div class="line"><span class="keyword">with</span> open(path,<span class="string">'rb'</span>) <span class="keyword">as</span> f1:</div><div class="line">    buf1 = f1.read() </div><div class="line">image_index = <span class="number">0</span></div><div class="line">image_index += struct.calcsize(<span class="string">'&gt;IIII'</span>)</div><div class="line">temp = struct.unpack_from(<span class="string">'&gt;784B'</span>, buf1, image_index) </div><div class="line"><span class="comment"># '&gt;784B'的意思就是用大端法读取784( 28*28 )个unsigned byte</span></div><div class="line">im = np.reshape(temp,(<span class="number">28</span>,<span class="number">28</span>))</div><div class="line">plt.imshow(im , cmap=<span class="string">'gray'</span>)</div></pre></td></tr></table></figure></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170317/162019276.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="give me 5" title="">
                </div>
                <div class="image-caption">give me 5</div>
            </figure>
<h1 id="多张图片读取"><a href="#多张图片读取" class="headerlink" title="多张图片读取"></a>多张图片读取</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170317/162228549.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="多张图片" title="">
                </div>
                <div class="image-caption">多张图片</div>
            </figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">readfile</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'E:\\Machine Learning\\train-images.idx3-ubyte'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f1:</div><div class="line">        buf1 = f1.read()</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'E:\\Machine Learning\\train-labels.idx1-ubyte'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f2:</div><div class="line">        buf2 = f2.read()</div><div class="line">    <span class="keyword">return</span> buf1, buf2</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_image</span><span class="params">(buf1)</span>:</span></div><div class="line">    image_index = <span class="number">0</span></div><div class="line">    image_index += struct.calcsize(<span class="string">'&gt;IIII'</span>)</div><div class="line">    im = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</div><div class="line">        temp = struct.unpack_from(<span class="string">'&gt;784B'</span>, buf1, image_index) <span class="comment"># '&gt;784B'的意思就是用大端法读取784个unsigned byte</span></div><div class="line">        im.append(np.reshape(temp,(<span class="number">28</span>,<span class="number">28</span>)))</div><div class="line">        image_index += struct.calcsize(<span class="string">'&gt;784B'</span>)  <span class="comment"># 每次增加784B</span></div><div class="line">    <span class="keyword">return</span> im</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_label</span><span class="params">(buf2)</span>:</span> <span class="comment"># 得到标签数据</span></div><div class="line">    label_index = <span class="number">0</span></div><div class="line">    label_index += struct.calcsize(<span class="string">'&gt;II'</span>)</div><div class="line">    <span class="keyword">return</span> struct.unpack_from(<span class="string">'&gt;9B'</span>, buf2, label_index)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    image_data, label_data = readfile()</div><div class="line">    im = get_image(image_data)</div><div class="line">    label = get_label(label_data)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</div><div class="line">        plt.subplot(<span class="number">3</span>, <span class="number">3</span>, i + <span class="number">1</span>)</div><div class="line">        title = <span class="string">u"标签对应为："</span>+ str(label[i])</div><div class="line">        plt.title(title, fontproperties=<span class="string">'SimHei'</span>)</div><div class="line">        plt.imshow(im[i], cmap=<span class="string">'gray'</span>)</div><div class="line">    plt.show()</div></pre></td></tr></table></figure>
<hr>
<p>遇到的一些坑：</p>
<ul>
<li><p>中文标题乱码的问题</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.title(title, fontproperties=<span class="string">'SimHei'</span>) <span class="comment"># 后边这个字体**SimHei**加上就好了</span></div></pre></td></tr></table></figure>
</li>
<li><p>标题内部不能用<strong>+</strong><br>在外部加好之后，赋值给新变量，然后放进<code>title</code>即可</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在做 TensorFlow和Python实现神经网络的时候，需要利用到一个MNIST数据集，数据集的格式是以&lt;code&gt;.idx1-ubyte&lt;/code&gt;后缀，包含60000个训练图像。将这些图像展示出来，需要利用到&lt;a href=&quot;http://feiyang.li/2017/03/17/python-struct/&quot;&gt;struct模块&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>细究Python struct 模块</title>
    <link href="http://feiyang.li/2017/03/17/python-struct/index.html"/>
    <id>http://feiyang.li/2017/03/17/python-struct/index.html</id>
    <published>2017-03-17T06:08:07.000Z</published>
    <updated>2017-03-26T11:39:20.941Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p><a href="https://docs.python.org/3/library/struct.html#module-struct" target="_blank" rel="external">struct</a> — Interpret bytes as packed binary data，将字节与二进制文件相互转化的工具<strong>Python struct 模块</strong>。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="关于格式字符串"><a href="#关于格式字符串" class="headerlink" title="关于格式字符串"></a>关于格式字符串</h1><p>在Python手册中，给出了C语言中常用类型与Python类型对应的格式符：</p>
<table>
<thead>
<tr>
<th style="text-align:left">格式符</th>
<th style="text-align:left">C语言类型</th>
<th style="text-align:left">Python类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">x</td>
<td style="text-align:left">pad byte</td>
<td style="text-align:left">no value</td>
</tr>
<tr>
<td style="text-align:left">c</td>
<td style="text-align:left">char</td>
<td style="text-align:left">string of length 1</td>
</tr>
<tr>
<td style="text-align:left">b</td>
<td style="text-align:left">signed char</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">B</td>
<td style="text-align:left">unsigned char</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">?</td>
<td style="text-align:left">_Bool</td>
<td style="text-align:left">bool</td>
</tr>
<tr>
<td style="text-align:left">h</td>
<td style="text-align:left">short</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">H</td>
<td style="text-align:left">unsigned short</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">int</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">I</td>
<td style="text-align:left">unsigned int</td>
<td style="text-align:left">integer or long</td>
</tr>
<tr>
<td style="text-align:left">l</td>
<td style="text-align:left">long</td>
<td style="text-align:left">integer</td>
</tr>
<tr>
<td style="text-align:left">L</td>
<td style="text-align:left">unsigned long</td>
<td style="text-align:left">long</td>
</tr>
<tr>
<td style="text-align:left">q</td>
<td style="text-align:left">long long</td>
<td style="text-align:left">long</td>
</tr>
<tr>
<td style="text-align:left">Q</td>
<td style="text-align:left">unsigned long</td>
<td style="text-align:left">long    long</td>
</tr>
<tr>
<td style="text-align:left">f</td>
<td style="text-align:left">float</td>
<td style="text-align:left">float</td>
</tr>
<tr>
<td style="text-align:left">d</td>
<td style="text-align:left">double</td>
<td style="text-align:left">float</td>
</tr>
<tr>
<td style="text-align:left">s</td>
<td style="text-align:left">char[]</td>
<td style="text-align:left">string</td>
</tr>
<tr>
<td style="text-align:left">p</td>
<td style="text-align:left">char[]</td>
<td style="text-align:left">string</td>
</tr>
<tr>
<td style="text-align:left">P</td>
<td style="text-align:left">void *</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
<h1 id="struct-pack-fmt-v1-v2-…"><a href="#struct-pack-fmt-v1-v2-…" class="headerlink" title="struct.pack(fmt, v1, v2, …)"></a>struct.pack(fmt, v1, v2, …)</h1><blockquote>
<p>Return a string containing the values v1, v2, … packed according to the given format. The arguments must match the values required by the format exactly.</p>
</blockquote>
<p>struct.pack用于将Python的值根据格式符，转换为字符串,准确来说是Byte。这个地方我们之前有提过，<a href="http://feiyang.li/2017/02/16/python-camp9/#Python3内的unicode和bytes">Python3内的unicode和bytes</a>，在Py3内<strong>文本总是Unicode，由str类型表示，二进制数据则由bytes类型表示。</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170216/212835886.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br>Py2是没有Byte这么个东西的。参数fmt是格式字符串，v1, v2, …表示要转换的python值。下面的例子将两个整数转换为字符串:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> struct  </div><div class="line"></div><div class="line">a = <span class="number">20</span>  </div><div class="line">b = <span class="number">400</span></div><div class="line"></div><div class="line">byte = struct.pack(<span class="string">"ii"</span>, a, b) <span class="comment">#转换后的str相当于其他语言中的字节流（字节数组），可以在网络上传输  </span></div><div class="line">big = struct.pack(<span class="string">"&gt;ii"</span>, a, b)  <span class="comment">#大端保存</span></div><div class="line">small = struct.pack(<span class="string">"&lt;ii"</span>, a, b) <span class="comment">#小端保存</span></div><div class="line">print(byte)</div><div class="line"><span class="comment"># &gt;&gt;&gt;:b'\x14\x00\x00\x00\x90\x01\x00\x00'</span></div><div class="line">print(big)</div><div class="line"><span class="comment"># &gt;&gt;&gt;:b'\x00\x00\x00\x14\x00\x00\x01\x90'</span></div><div class="line">print(small)</div><div class="line"><span class="comment"># &gt;&gt;&gt;:b'\x14\x00\x00\x00\x90\x01\x00\x00'</span></div><div class="line"><span class="keyword">print</span> (byte[<span class="number">0</span>],byte[<span class="number">4</span>]) </div><div class="line"><span class="comment"># &gt;&gt;&gt;:b'\x14\x00\x00\x00\x90\x01\x00\x00'</span></div></pre></td></tr></table></figure>
<p>格式符”i”表示转换为int，’ii’表示有两个int变量。进行转换后的结果长度为8个字节（int类型占用4个字节，两个int为8个字节）<del>可以看到输出的结果是乱码，因为结果是二进制数据，所以显示为乱码。可以使用python的内置函数repr来获取可识别的字符串</del> ，以上问题在Python3中不会出现了其中十六进制的0x00000014, 0x00000190分别表示20和400。</p>
<p>上一段代码<strong>最后那个很有意思诶，竟然是默认采用小端</strong>。</p>
<h2 id="大端存储和小端存储"><a href="#大端存储和小端存储" class="headerlink" title="大端存储和小端存储"></a>大端存储和小端存储</h2><p>小端：<strong>较高</strong>的有效字节存放在<strong>较高</strong>的存储器地址，<strong>较低</strong>的有效字节存放在<strong>较低</strong>的存储器地址。<br>大端：<strong>较高</strong>的有效字节存放在<strong>较低</strong>的存储器地址，<strong>较低</strong>的有效字节存放在<strong>较高</strong>的存储器地址。</p>
<p>如果将一个16位的整数0x1234存放到一个短整型变量（short）中。这个短整型变量在内存中的存储在大小端模式由下表所示。 </p>
<table>
<thead>
<tr>
<th style="text-align:left">地址偏移</th>
<th style="text-align:left">大端模式</th>
<th style="text-align:left">小端模式</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">0x00</td>
<td style="text-align:left">12（OP0）</td>
<td style="text-align:left">34（OP1）</td>
</tr>
<tr>
<td style="text-align:left">0x01</td>
<td style="text-align:left">34（OP1）</td>
<td style="text-align:left">12（OP0）</td>
</tr>
</tbody>
</table>
<p>采用大端方式进行数据存放符合人类的正常思维，而采用小端方式进行数据存放利于计算机处理。</p>
<h1 id="struct-unpack-fmt-buffer"><a href="#struct-unpack-fmt-buffer" class="headerlink" title="struct.unpack(fmt, buffer)"></a>struct.unpack(fmt, buffer)</h1><blockquote>
<p>Unpack from the buffer <em>buffer</em> (presumably packed by pack(fmt, …)) according to the format string <em>fmt</em>. The result is a tuple even if it contains exactly one item. The buffer’s size in bytes must match the size required by the format, as reflected by <a href="https://docs.python.org/3/library/struct.html#struct.calcsize" target="_blank" rel="external">calcsize()</a>.</p>
</blockquote>
<p>struct.unpack做的工作刚好与struct.pack相反，用于将字节流转换成python数据类型。它的函数原型为：struct.unpack(fmt, string)，该函数返回一个tuple。 </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a1, a2 = struct.unpack(<span class="string">"ii"</span>, byte)  </div><div class="line">print(type(struct.unpack(<span class="string">"ii"</span>, byte)),a1,a2)</div><div class="line"><span class="comment"># &gt;&gt;&gt;:&lt;class 'tuple'&gt; 20 400</span></div></pre></td></tr></table></figure>
<h1 id="struct-calcsize-fmt"><a href="#struct-calcsize-fmt" class="headerlink" title="struct.calcsize(fmt)"></a>struct.calcsize(fmt)</h1><blockquote>
<p>Return the size of the struct (and hence of the bytes object produced by pack(fmt, …)) corresponding to the format string fmt.</p>
</blockquote>
<p>struct.calcsize用于计算格式字符串所对应的结果的长度，如：struct.calcsize(‘ii’)，返回8。因为两个int类型所占用的长度是8个字节。</p>
<hr>
<p>参考链接：<br><a href="https://docs.python.org/3/library/struct.html" target="_blank" rel="external">https://docs.python.org/3/library/struct.html</a><br><a href="http://blog.csdn.net/occupy8/article/details/11052103" target="_blank" rel="external">http://blog.csdn.net/occupy8/article/details/11052103</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/3/library/struct.html#module-struct&quot;&gt;struct&lt;/a&gt; — Interpret bytes as packed binary data，将字节与二进制文件相互转化的工具&lt;strong&gt;Python struct 模块&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu14.04+CPU+Python的Caffe安装教程</title>
    <link href="http://feiyang.li/2017/03/16/Ubuntu-caffe/index.html"/>
    <id>http://feiyang.li/2017/03/16/Ubuntu-caffe/index.html</id>
    <published>2017-03-16T02:52:28.000Z</published>
    <updated>2017-03-25T10:51:10.817Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>背景：手头只有一个win主机，虚拟机版本：Ubuntu14.04，目标是安装后CAFFE能作为PYTHON MODULE来使用，只使用CPU模式</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="安装开发所依赖的安装包"><a href="#安装开发所依赖的安装包" class="headerlink" title="安装开发所依赖的安装包"></a>安装开发所依赖的安装包</h1><p> 打开Ubuntu的终端，输入命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler</div><div class="line">sudo apt-get install --no-install-recommends libboost-all-dev</div><div class="line">sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev</div><div class="line">sudo apt-get install libatlas-base-dev</div></pre></td></tr></table></figure></p>
<h2 id="升级g"><a href="#升级g" class="headerlink" title="升级g++"></a>升级g++</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">g++ --version&lt;/span&gt;</div></pre></td></tr></table></figure>
<p>查看g++版本，由于编译需要至少4.8版本的g++，一般来说，自带版本应该时4.8。如果想要升级g++，这里也提供以下下载方式，并且设置默认编译的g++为最新版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo add-apt-repository ppa:ubuntu-toolchain-r/test #用来添加库信息的帮助脚本。  </div><div class="line">sudo apt-get update                                 #更新  </div><div class="line">sudo apt-get install gcc-4.9                        </div><div class="line">sudo apt-get install g++-4.9                        #更新g++，gcc  </div><div class="line">sudo ln -sf /usr/bin/gcc-4.9 /usr/bin/gcc           #在调用的gcc库上做一个与最新版本的软连接，更改g++的默认版本。  </div><div class="line">sudo ln -sf /usr/bin/gcc-ar-4.9 /usr/bin/gcc-ar  </div><div class="line">sudo ln -sf /usr/bin/gcc-ranlib-4.9 /usr/bin/gcc-ranlib</div></pre></td></tr></table></figure></p>
<h2 id="安装anaconda，建议安装。"><a href="#安装anaconda，建议安装。" class="headerlink" title="安装anaconda，建议安装。"></a>安装anaconda，建议安装。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-4.3.1-Linux-x86_64.sh</div><div class="line">bash Anaconda3-4.3.1-Linux-x86_64.sh</div></pre></td></tr></table></figure>
<p>安装过程中记得一直选择默认的就行，傻瓜式安装。是否在bashrc中添加路径，这里选择“yes”就可以。忘了的话，解决方法很麻烦，自己查查吧。</p>
<h2 id="安装OpenCV2-4-这个经常失败，建议跳过，不影响使用"><a href="#安装OpenCV2-4-这个经常失败，建议跳过，不影响使用" class="headerlink" title="安装OpenCV2.4(这个经常失败，建议跳过，不影响使用)"></a>安装OpenCV2.4(这个经常失败，建议跳过，不影响使用)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/bearpaw/Install-OpenCV</div><div class="line">cd Install-OpenCV/Ubuntu/2.4</div><div class="line">sh ./opencv2_4_10.sh</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170315/155549210.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="jayrambhia/Install-OpenCV.git" title="">
                </div>
                <div class="image-caption">jayrambhia/Install-OpenCV.git</div>
            </figure>
<p>编译过程很慢，中间我还报过一次错，不得不重新来了一次。如果觉得难度不够的话，可以选择官网的安装包：<a href="http://opencv.org/" target="_blank" rel="external">http://opencv.org/</a>，我这里是根据大神编译过的版本进行安装的。</p>
<h2 id="安装atlas"><a href="#安装atlas" class="headerlink" title="安装atlas"></a>安装atlas</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libatlas-base-dev                #安装atlas简单易行。</div></pre></td></tr></table></figure>
<h1 id="编译Caffe"><a href="#编译Caffe" class="headerlink" title="编译Caffe"></a>编译Caffe</h1><h2 id="下载caffe"><a href="#下载caffe" class="headerlink" title="下载caffe"></a>下载caffe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~  </div><div class="line">git clone https://github.com/BVLC/caffe.git</div></pre></td></tr></table></figure>
<h2 id="修改Makefile配置"><a href="#修改Makefile配置" class="headerlink" title="修改Makefile配置"></a>修改Makefile配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd caffe  </div><div class="line">cp Makefile.config.example Makefile.config </div><div class="line">gedit Makefile.config         #我个人比较喜欢gedit ，用起来方便。</div></pre></td></tr></table></figure>
<ul>
<li>CPU_ONLY := 1</li>
<li>配置一些引用文件（增加部分主要是解决新版本下，HDF5的路径问题）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">INCLUDE_DIRS := $(PYTHON_INCLUDE)  /usr/local/include  /usr/include/hdf5/serial</div><div class="line">LIBRARY_DIRS := $(PYTHON_LIB)  /usr/local/lib   /usr/lib /usr/lib/x86_64-linux-gnu/hdf5/serial</div><div class="line">BLAS := atlas</div></pre></td></tr></table></figure>
<h2 id="编译caffe"><a href="#编译caffe" class="headerlink" title="编译caffe"></a>编译caffe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">make all -j8</div><div class="line">make test -j8</div><div class="line">make runtest -j8</div></pre></td></tr></table></figure>
<p>另外, 这个make默认是用CPU单核运算,如果想要快一点, 比如我想使用四核, 在make后面加上-j4标签。<br>如果上面4行某一行报错之后想要重试,建议先make clean再重新开始。</p>
<h2 id="更新安装依赖。"><a href="#更新安装依赖。" class="headerlink" title="更新安装依赖。"></a>更新安装依赖。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd caffe  </div><div class="line">cat python/requirements.txt | xargs -L 1 sudo pip install</div></pre></td></tr></table></figure>
<h1 id="编译Python接口"><a href="#编译Python接口" class="headerlink" title="编译Python接口"></a>编译Python接口</h1><p>打开新的终端, 用which Python和which pip<br>确定使用的是anaconda提供的python环境，然后进入<code>caffe/python,</code> 执行下列命令，</p>
<h2 id="确保pip已经安装"><a href="#确保pip已经安装" class="headerlink" title="确保pip已经安装"></a>确保pip已经安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python-pip</div><div class="line">for req in $(cat requirements.txt); do pip install $req; done  #python运行需要的库。</div></pre></td></tr></table></figure>
<h2 id="再次回到caffe根目录我们可以执行："><a href="#再次回到caffe根目录我们可以执行：" class="headerlink" title="再次回到caffe根目录我们可以执行："></a>再次回到caffe根目录我们可以执行：</h2><p>在caffe根目录的python文件夹下，有一个requirements.txt的清单文件，上面列出了需要的依赖库，按照这个清单安装就可以了。<br>在安装scipy库的时候，需要fortran编译器（gfortran)，如果没有这个编译器就会报错，因此，我们可以先安装一下。</p>
<p>回到caffe的根目录，然后执行安装代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd ~/caffe</div><div class="line">sudo apt-get install gfortran</div><div class="line">cd ./python</div><div class="line">for req in $(cat requirements.txt); do pip install $req; done</div></pre></td></tr></table></figure>
<p>安装完成以后，再次回到caffe根目录我们可以执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo pip install -r python/requirements.txt</div></pre></td></tr></table></figure></p>
<p>就会看到，安装成功的，都会显示Requirement already satisfied, 没有安装成功的，会继续安装。</p>
<h2 id="编译python接口"><a href="#编译python接口" class="headerlink" title="编译python接口"></a>编译python接口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make pycaffe -j8</div></pre></td></tr></table></figure>
<h2 id="运行python"><a href="#运行python" class="headerlink" title="运行python"></a>运行python</h2><p>进入<code>caffe/python</code> ，运行<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ python2<span class="number">.7</span></div><div class="line">Python <span class="number">2.7</span><span class="number">.12</span> (default, Jul  <span class="number">1</span> <span class="number">2016</span>, <span class="number">15</span>:<span class="number">12</span>:<span class="number">24</span>) </div><div class="line">[GCC <span class="number">5.4</span><span class="number">.0</span> <span class="number">20160609</span>] on linux2</div><div class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> caffe</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure></p>
<h2 id="加入PythonPath"><a href="#加入PythonPath" class="headerlink" title="加入PythonPath"></a>加入PythonPath</h2><p><code>gedit ~/.bashrc</code><br>将<code>export PYTHONPATH=/home/wing/caffe/python:$PYTHONPATH</code>添加到文件最后。<br><code>source ~/.bashrc</code> 使更改生效。<br>这样，在其他地方打开python，也可以import caffe了。</p>
<hr>
<p>出现过一个问题：<br><strong>error ：No module named google.protobuf.internal</strong><br>解决方法是：<br><code>sudo chmod 777 -R  anaconda</code>（文件夹） 改变权限 然后<br><code>conda install protobuf</code><br>可以很方便的解决的问题</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;背景：手头只有一个win主机，虚拟机版本：Ubuntu14.04，目标是安装后CAFFE能作为PYTHON MODULE来使用，只使用CPU模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Win10 Anaconda中安装Tensorflow并配置到jupter kernel</title>
    <link href="http://feiyang.li/2017/03/15/win10-conda-tensorflow/index.html"/>
    <id>http://feiyang.li/2017/03/15/win10-conda-tensorflow/index.html</id>
    <published>2017-03-15T05:22:44.000Z</published>
    <updated>2017-03-16T02:57:34.710Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>Windows环境下 Anaconda中安装Tensorflow，并且将Tensorflow配置到jupyter notebook中去。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h1><p>下载：<a href="https://www.continuum.io/downloads" target="_blank" rel="external">https://www.continuum.io/downloads</a>   ，我用的是Python 3.5<br>下载完以后，安装。</p>
<h2 id="输入清华的仓库镜像，更新包更快："><a href="#输入清华的仓库镜像，更新包更快：" class="headerlink" title="输入清华的仓库镜像，更新包更快："></a>输入清华的仓库镜像，更新包更快：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</div><div class="line">conda config --set show_channel_urls yes</div></pre></td></tr></table></figure>
<p>推荐第一行命令输入两次，以便把这个镜像地址放在首位。</p>
<h2 id="安装TensorFlow"><a href="#安装TensorFlow" class="headerlink" title="安装TensorFlow"></a>安装TensorFlow</h2><p>一般来说，我们推荐新建一个新的virtualenv，这样可以预防同一个环境中的包太多，相互发生冲突。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">conda create -n tensorflow python=3.5</div></pre></td></tr></table></figure></p>
<p>既然是建议，那么<strong>忽视上边这一句话，也是可以的。</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">activate tensorflow</div></pre></td></tr></table></figure>
<p>激活后，我选择安装的是CPU版本，输入：</p>
<p><code>pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-0.12.0-cp35-cp35m-win_amd64.whl</code></p>
<p>安装失败的话多试几次</p>
<h2 id="加入jupyter-notebook的ipykernel内核"><a href="#加入jupyter-notebook的ipykernel内核" class="headerlink" title="加入jupyter notebook的ipykernel内核"></a>加入jupyter notebook的ipykernel内核</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">source activate tensorflow# On Windows, remove the word &apos;source&apos;</div><div class="line">install ipykernel</div><div class="line">python -m ipykernel install --user --name tensorflow--display-name &quot;Python (myenv)&quot;</div></pre></td></tr></table></figure>
<p>在激活状态下，安装<code>ipykernel</code>，后边那个展示名称，自己可以随便填。进入jupyter notebook ，运行一下测试文件，看是否可以使用。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170315/130833100.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>如果不行，输入<code>jupyter --paths</code><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170315/130930707.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<p>检查一下kernal是不是设置的有问题，比如我的就是<code>C:\Users\wing\AppData\Roaming\jupyter\kernels\tensorflow</code><br>一般来说是环境所在的地址有问题，修改一下就可以啦。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170315/131024268.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>通过这个方法，可以把自己手贱多加上去的kernel删掉。<strong>jupyter kernal 删除</strong><br>更多建议阅读<a href="http://ipython.readthedocs.io/en/stable/install/kernel_install.html" target="_blank" rel="external">官方文档</a></p>
<p>我记得这个地方蛮复杂的，我当时往kernel里边加入R内核，费了大力气。当时还没写博客的习惯，现在又忘记怎么加的，真是日了狗。</p>
<p><img src="http://cdn.mmmxcc.cn/blog/20170315/131835074.png" alt=""></p>
<h1 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</div><div class="line">tf.__version__</div><div class="line">&gt;&gt;&gt;:<span class="string">'1.0.1'</span></div><div class="line">sess = tf.InteractiveSession()</div><div class="line">x = tf.Variable([<span class="number">1.0</span>, <span class="number">2.0</span>])</div><div class="line">a = tf.constant([<span class="number">3.0</span>, <span class="number">3.0</span>])</div><div class="line">x.initializer.run()<span class="comment"># 使用初始化器 initializer op 的 run() 方法初始化 ‘x‘ </span></div><div class="line">sub = tf.sub(x, a)<span class="comment"># 增加一个减法 sub op, 从 ‘x‘ 减去 ‘a‘. 运行减法 op, 输出结果 </span></div><div class="line">sub.eval()</div><div class="line">&gt;&gt;&gt;:array([<span class="number">-2.</span>, <span class="number">-1.</span>], dtype=float32)</div></pre></td></tr></table></figure>
<p>我碰到了一个<code>module &#39;tensorflow&#39; has no attribute &#39;sub&#39;</code>，原因是tensorflow升级了之后，这个<code>sub</code>函数被改成了<code>subtract</code>，代码改成<code>sub = tf.subtract(x, a)</code>即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Windows环境下 Anaconda中安装Tensorflow，并且将Tensorflow配置到jupyter notebook中去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://feiyang.li/tags/Machine-Learning/"/>
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
      <category term="Jupyter" scheme="http://feiyang.li/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>《小萝莉的猴神大叔》</title>
    <link href="http://feiyang.li/2017/03/11/indian-movie/index.html"/>
    <id>http://feiyang.li/2017/03/11/indian-movie/index.html</id>
    <published>2017-03-11T07:06:14.000Z</published>
    <updated>2017-03-13T10:45:25.356Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>但行好事，莫问前程。真正能做到的能有几个呢？</p>
</blockquote>
<hr>
<a id="more"></a>
<div align="center"><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/145041434.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="你是我心脏跳动的力量" title="">
                </div>
                <div class="image-caption">你是我心脏跳动的力量</div>
            </figure><br></div>



<p>没看过几部印度电影，算上三傻，这也仅仅是第二部而已。什么小萝莉的猴神大叔，印度电影命名水平还是一如既往的差。</p>
<div align="center"><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/145415244.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><br></div>

<p>刚开始看的时候呀，我一边哈哈哈一边和室友猜下边将发生啥，猜了好几次，竟然都猜对了。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/145514334.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>后来不知道怎么了，就不想说话了，戴着耳机投入到猴神大叔的世界了。就算猜到了结尾，也丝毫不影响我看的时候哭的稀里哗啦的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/145548062.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>我其实不太懂印度巴基斯坦那边的渊源，也不太懂宗教信仰之类的，所以我觉得我应该错过了好多值得玩味的小细节。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/151454612.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>印度电影中的人物好像总是一言不合就唱歌跳舞，开心也跳，难过也跳，想跳就跳，一跳还跳很长时间，但我还挺喜欢看的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/145814885.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="童话里的巴士" title="">
                </div>
                <div class="image-caption">童话里的巴士</div>
            </figure>
<p>国家和国家之间，宗教和宗教之间也许有很多矛盾，但是爱和信仰是相通的。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/150129990.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>善良朴实虔诚的猴神大叔因为对小女孩的一个承诺，毅然决然的走上了送小女孩回家的路。这一路，太凶险，却也不乏各种各样善良的人的帮助。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/150007185.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>小女孩从小无法说话，后来又和家人走丢，这本是一件不幸的事，却因为遇到了猴神大叔，遇到正义的摄影师，遇到善良的伊斯兰教父，还有很多很多充满善意的人，才如此幸运的回到妈妈身边。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/150040056.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>感觉这个世界上，像猴神大叔这样的好人还是太少了。</p>
<p>因为爱，扛起对一个陌生小姑娘的全部责任，从一个平庸的别人眼中的失败者，到无所不能面对重重困难都充满力量的人。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170311/151638605.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p><strong>但行好事，莫问前程。真正能做到的能有几个呢？</strong></p>
<hr>
<p>主题歌是这样唱的：</p>
<ul>
<li>你是我的道路，你与我为伴</li>
<li>我找寻着你，也找到了自己</li>
<li>我是你的声音，而你是我的语言</li>
<li>我们相遇之后，我感觉充满了力量</li>
<li>我们相遇之后，我变得无所不能</li>
<li>尽管终点困难重重，但前方的路不再迷茫</li>
<li>我是你的小路，你是我的小棉袄</li>
<li>找到你的足迹，我也找到了自己</li>
<li>因为你是我心脏跳动的力量。</li>
</ul>
<hr>
<p>最后一幕永远定格在我的内心深处，人至善、水至柔、景至美、情至真！再铁骨铮铮的汉子也会为之动容。</p>
<p>记得有人说过，<strong>好人会受伤，会流泪，会不知所措，但好人永远是这个世界的魂</strong>，向好人致敬！</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=35778201&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;但行好事，莫问前程。真正能做到的能有几个呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="臭臭" scheme="http://feiyang.li/tags/%E8%87%AD%E8%87%AD/"/>
    
      <category term="Movie" scheme="http://feiyang.li/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>细究Python键盘输入</title>
    <link href="http://feiyang.li/2017/03/10/python-input/index.html"/>
    <id>http://feiyang.li/2017/03/10/python-input/index.html</id>
    <published>2017-03-10T05:52:53.000Z</published>
    <updated>2017-03-27T11:44:05.567Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>本文介绍了<code>raw_input</code> 和 <code>input</code>在<code>python2</code>和<code>python3</code>上的区别，以及如何利用正则表达式和<code>input</code>键盘输入一维数组和二维数组。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="raw-input-和-input"><a href="#raw-input-和-input" class="headerlink" title="raw_input 和 input"></a>raw_input 和 input</h1><h2 id="python2中"><a href="#python2中" class="headerlink" title="python2中"></a>python2中</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">raw_input_A = raw_input(<span class="string">"raw_input: "</span>)</div><div class="line">type(raw_input_A)</div></pre></td></tr></table></figure>
<p>可以看到输出的是 <code>str</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">input_A = input(<span class="string">"Input: "</span>) <span class="comment">#不能输入字母</span></div><div class="line">type(raw_input_A)</div></pre></td></tr></table></figure>
<p>可以看到输出的是 <code>int</code>，并且我们发现，input根本不能输入字母，会直接报<code>NameError: name &#39;abc&#39; is not defined</code>，提示没有定义。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170310/125930252.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="Python2报错" title="">
                </div>
                <div class="image-caption">Python2报错</div>
            </figure></p>
<p>查看 <a href="http://docs.python.org/library/functions.html?highlight=input#built-in-functions" target="_blank" rel="external">Built-in Functions</a> ，得知：<br><code>input([prompt])
    Equivalent to eval(raw_input(prompt))</code></p>
<p>input() 本质上还是使用 raw_input() 来实现的，只是调用完 raw_input() 之后再调用 eval() 函数，所以，你甚至可以将表达式作为 input() 的参数，并且它会计算表达式的值并返回它。<br>不过在 Built-in Functions 里有一句话是这样写的：Consider using the raw_input() function for general input from users.<br>除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。</p>
<h2 id="python3中"><a href="#python3中" class="headerlink" title="python3中"></a>python3中</h2><p>因为刚才说的那个原因，input其实没有什么必要，所以就被改进了。</p>
<p>简单来说，<code>raw_input</code>没有了，只剩下<code>input</code>。现在这个input就是之前那个<code>raw_input</code>。</p>
<p>查看 <a href="https://docs.python.org/3/library/functions.html#input" target="_blank" rel="external">Python官方文档input([prompt])</a> ，得知：</p>
<p><code>If the prompt argument is present, it is written to standard output without a trailing newline. The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that. When EOF is read, EOFError is raised.</code></p>
<p>简单说，返回的内容都是str，括号里边的<code>prompt</code>写什么，就会当做提示内容输出。比如底下的那个 <code>--&gt;</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; s = input('--&gt; ')  </div><div class="line">--&gt; Monty Python's Flying Circus</div><div class="line">&gt;&gt;&gt; s  </div><div class="line">"Monty Python's Flying Circus"</div></pre></td></tr></table></figure></p>
<p>因为我一般都是用python3，接下来的内容都是以3为准。</p>
<hr>
<h1 id="Python输入数组"><a href="#Python输入数组" class="headerlink" title="Python输入数组"></a>Python输入数组</h1><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><ul>
<li>使用<code>int()</code>进行强制类型转型</li>
<li>当输入内容不为数字时，不能转型，发生<code>except</code>跳出循环。</li>
<li>先声明<code>data</code>是一个list，将<code>input_A</code>一个个<code>+</code>进去。<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">data = []</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        input_A = int(input(<span class="string">"Input: "</span>))</div><div class="line">        data +=[input_A]</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">break</span></div><div class="line">data</div><div class="line">type(data)</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170310/132018132.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="输入数组" title="">
                </div>
                <div class="image-caption">输入数组</div>
            </figure>
<p>在以上的基础上，我们可以用python输入二维数组</p>
<h2 id="python输入二维数组"><a href="#python输入二维数组" class="headerlink" title="python输入二维数组"></a>python输入二维数组</h2><p>正则表达式会利用非数字的字符，进行切割，因此数字之间插入什么都无所谓。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line">data2D = []</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    userInput = input(<span class="string">'Input:'</span>) <span class="comment"># 输入数组，用空格隔开即可</span></div><div class="line">    info = re.split(<span class="string">r'[\D]'</span>,userInput)<span class="comment">#正则表达式分割</span></div><div class="line">    data = []<span class="comment"># 定义一维数组</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> info:</div><div class="line">            data+=[int(number)] <span class="comment"># 一维数组加入数字</span></div><div class="line">        data2D+=[data] <span class="comment">#一维数组加入到二维中去</span></div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">data2D</div></pre></td></tr></table></figure>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170310/135120083.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文介绍了&lt;code&gt;raw_input&lt;/code&gt; 和 &lt;code&gt;input&lt;/code&gt;在&lt;code&gt;python2&lt;/code&gt;和&lt;code&gt;python3&lt;/code&gt;上的区别，以及如何利用正则表达式和&lt;code&gt;input&lt;/code&gt;键盘输入一维数组和二维数组。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Python_camp" scheme="http://feiyang.li/categories/Python-camp/"/>
    
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
      <category term="Python_camp" scheme="http://feiyang.li/tags/Python-camp/"/>
    
  </entry>
  
  <entry>
    <title>算法导论 第7章 快速排序</title>
    <link href="http://feiyang.li/2017/03/09/Python-quick-order/index.html"/>
    <id>http://feiyang.li/2017/03/09/Python-quick-order/index.html</id>
    <published>2017-03-09T14:22:16.000Z</published>
    <updated>2017-03-25T05:10:12.327Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>快速排序是一种非常优秀的排序方法 </p>
</blockquote>
<a id="more"></a>
<p>对于包含n个数的输入数组来说，快速排序是一种最坏情况是<br>$$\theta(n^{2})$$ 的算法，虽然表现出的状态和堆排序是相似的。但实际上，快速排序的复杂度绝大部分情况的都可以做到<br>$$\theta(nlgn)$$)</p>
<hr>
<h1 id="快排算法的描述"><a href="#快排算法的描述" class="headerlink" title="快排算法的描述"></a>快排算法的描述</h1><h2 id="快排算法分为两部分："><a href="#快排算法分为两部分：" class="headerlink" title="快排算法分为两部分："></a>快排算法分为两部分：</h2><ul>
<li>分解：数组<code>A[p..r]</code>被分解为<code>A[p...q-1]</code>和<code>A[q+1...r]</code>，其中<code>A[p...q-1]</code>内的元素都比<code>A[q]</code>小，<code>A[q+1...r]</code>中的元素都比<code>A[q]</code>大。</li>
<li>解决：通过调用快速排序，解决<code>A[p...q-1]</code>和<code>A[q+1...r]</code>。</li>
<li>合并：因为元素都是原址排序，因此不需要合并操作。</li>
</ul>
<h2 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h2><p>对整个数组进行递归排序：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">QUICKSORT(A,p,r)</div><div class="line"><span class="keyword">if</span> p &lt; r:</div><div class="line">    q = PARTITION(A,p,r);</div><div class="line">    QUICKSORT(A,p,q<span class="number">-1</span>);</div><div class="line">    QUICKSORT(A,q+<span class="number">1</span>,r);</div></pre></td></tr></table></figure></p>
<p>快速排序算法的关键是PARTITION过程，它对A[p..r]进行就地重排：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">PARTITION(A,p,r)</div><div class="line">x = A[r]</div><div class="line">i = p<span class="number">-1</span></div><div class="line"><span class="keyword">for</span> j = p to r<span class="number">-1</span><span class="comment">// A[j]是待比较的元素</span></div><div class="line">  <span class="keyword">if</span> A[j] ≤ r<span class="comment">// 若A[j]比主元小</span></div><div class="line">    i = i + <span class="number">1</span> <span class="comment">// i往后一位（符合，不用替换；不符合i就停在这个地方，等着j过来叫唤）</span></div><div class="line">    exchange A[i] with A[j]<span class="comment">//倘若A[j]比主元小，其实是不发生交换的。</span></div><div class="line">exchange A[i+<span class="number">1</span>] with A[r]</div><div class="line"><span class="keyword">return</span> i + <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>借用一张《算法导论》的图<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170309/191837286.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="Introduction to Algorithms" title="">
                </div>
                <div class="image-caption">Introduction to Algorithms</div>
            </figure></p>
<h1 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h1><h2 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h2><p>基本和伪代码是一样的<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> temp = *b;</div><div class="line">    *b = *a;</div><div class="line">    *a = temp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> *A, <span class="keyword">int</span> len)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%4d"</span>, A[i]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">PARTITION</span><span class="params">(<span class="keyword">int</span> *A, <span class="keyword">int</span> p, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> i = p - <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> x = A[r];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = p; j &lt; r; j++) &#123;</div><div class="line">        <span class="keyword">if</span> (A[j] &lt;= x) &#123;</div><div class="line">            i++;</div><div class="line">            swap(&amp;A[i], &amp;A[j]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    swap(&amp;A[i + <span class="number">1</span>], &amp;A[r]);</div><div class="line">    <span class="keyword">return</span> i + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">QUICKSORT</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> p, <span class="keyword">int</span> r)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (p &lt; r) &#123;</div><div class="line">        <span class="keyword">int</span> q = PARTITION(A, p, r);</div><div class="line">        QUICKSORT(A, p, q - <span class="number">1</span>);</div><div class="line">        QUICKSORT(A, q + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> A[] = &#123; <span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span> &#125;;</div><div class="line">    print(A, <span class="number">11</span>);</div><div class="line">    QUICKSORT(A, <span class="number">0</span>, <span class="number">10</span>);</div><div class="line">    print(A,<span class="number">11</span>);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>期间出了一个错误，error C3861: 找不到标识符。后发现是因为把PARTITION放在了QUICKSORT后边，导致QUICKSORT找不到PARTITION。</p>
<h2 id="python代码"><a href="#python代码" class="headerlink" title="python代码"></a>python代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding=utf-8</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">PARTITION</span><span class="params">(A,p,r)</span>:</span></div><div class="line">    x = A[r]</div><div class="line">    i = p - <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(p,r):</div><div class="line">        <span class="keyword">if</span> A[j]&lt;=x:</div><div class="line">            i = i + <span class="number">1</span></div><div class="line">            temp = A[i]</div><div class="line">            A[i] = A[j]</div><div class="line">            A[j] = temp <span class="comment">#python没有指针，这个地方稍微不一样</span></div><div class="line">    temp = A[i+<span class="number">1</span>]</div><div class="line">    A[i+<span class="number">1</span>] = A[r]</div><div class="line">    A[r] = temp</div><div class="line">    <span class="keyword">return</span> i+<span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">QUICKSORT</span><span class="params">(A,p,r)</span>:</span></div><div class="line">    <span class="keyword">if</span> p &gt;= r:</div><div class="line">        <span class="keyword">return</span></div><div class="line">    q = PARTITION(A,p,r)</div><div class="line">    QUICKSORT(A,p,q<span class="number">-1</span>)</div><div class="line">    QUICKSORT(A,q+<span class="number">1</span>,r)</div><div class="line">    </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    l =  [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>] ;</div><div class="line">    QUICKSORT(l,<span class="number">0</span>,len(l)<span class="number">-1</span>)</div><div class="line">    print(l)</div></pre></td></tr></table></figure>
<p>这里使用的数组是list，声明方式是<code>l =  [9,10,11,7,1,2,3,6,5,8,4]</code>，注意那个[]。如果使用元组tuple，会导致元素不能修改。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;快速排序是一种非常优秀的排序方法 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://feiyang.li/tags/Python/"/>
    
      <category term="Algorithms" scheme="http://feiyang.li/tags/Algorithms/"/>
    
      <category term="sort" scheme="http://feiyang.li/tags/sort/"/>
    
      <category term="cpp" scheme="http://feiyang.li/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>Digitalocean一键搭建vpn</title>
    <link href="http://feiyang.li/2017/03/03/do-vpn/index.html"/>
    <id>http://feiyang.li/2017/03/03/do-vpn/index.html</id>
    <published>2017-03-03T06:17:00.000Z</published>
    <updated>2017-03-06T14:07:04.569Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>使用github学生优惠内的digitalocean，一键搭建vpn。获得60刀，免费用一年~</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="为什么选择DigitalOcean"><a href="#为什么选择DigitalOcean" class="headerlink" title="为什么选择DigitalOcean"></a>为什么选择DigitalOcean</h2><ul>
<li>可以不用信用卡，通过Paypal即可绑定。</li>
<li>有512MB内存、单核处理器可选，每月5美元。</li>
<li>每月1000GB的流量</li>
</ul>
<h2 id="申请github学生优惠包"><a href="#申请github学生优惠包" class="headerlink" title="申请github学生优惠包"></a>申请github学生优惠包</h2><ul>
<li>前往 <a href="https://education.github.com/pack/" target="_blank" rel="external">https://education.github.com/pack/</a> 申请学生优惠包<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/130655469.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>有账号就直接登录，没有账号选择注册账号：<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/133824667.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>申请的时候，会问你是不是学生，那我肯定说是学生啦，我又不是撒<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/133923463.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>然后会要求提供学校名称，所以那么骗人的edu邮箱基本是没有办法使用的。最后那句<code>How do you plan to use GitHub?</code> 你就说<code>I&#39;ll public my program at github.</code>或者什么<code>I love github</code>，开心就好，说什么无所谓。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/134154441.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>很快就会审核通过，会邮件通知。</li>
</ul>
<h2 id="领取-DigitalOcean-优惠包"><a href="#领取-DigitalOcean-优惠包" class="headerlink" title="领取 DigitalOcean 优惠包"></a>领取 <a href="https://www.digitalocean.com/company/contact/" target="_blank" rel="external">DigitalOcean</a> 优惠包</h2><ul>
<li>看到这个码，50刀就到你手了。<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/134605243.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>注册DO账号，用我的邀请链接注册，多送10刀。<a href="https://m.do.co/c/990a117f5061" target="_blank" rel="external">https://m.do.co/c/990a117f5061</a> ，注册之后需要付款5刀，这个时候不要用paypel的汇率，用本地的汇率。</li>
</ul>
<h2 id="使用DigitalOcean邀请注册之后就不能使用github学生包50刀的处理方法"><a href="#使用DigitalOcean邀请注册之后就不能使用github学生包50刀的处理方法" class="headerlink" title="使用DigitalOcean邀请注册之后就不能使用github学生包50刀的处理方法"></a>使用DigitalOcean邀请注册之后就不能使用github学生包50刀的处理方法</h2><p>我看到很多人提到领取了这个10刀之后，那个50刀的github优惠包里边的码就不能用了。简直<strong>一派胡言，I’m angry</strong>。<br>可以通过<a href="https://cloud.digitalocean.com/support/tickets/new?i=f00e90" target="_blank" rel="external">提交ticket</a><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/135235188.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure><br>然后告诉他，我不知道github学生优惠包里边的码怎么用，让他给你处理。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/135344548.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure><br>一般来说分分钟就会回复邮件，帮你加上50刀。<strong>如果使用我的推荐链接的话，我可以把我的回复内容复制给你。</strong></p>
<h1 id="安装vpn"><a href="#安装vpn" class="headerlink" title="安装vpn"></a>安装vpn</h1><p>这里使用一键安装脚本，基于centos。</p>
<h2 id="新建vps"><a href="#新建vps" class="headerlink" title="新建vps"></a>新建vps</h2><p>选择顶栏第一个 <a href="https://cloud.digitalocean.com/droplets?i=f00e90" target="_blank" rel="external">Droplets</a>，点击<code>create droplet</code><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/135808655.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure><br>选择5刀，centos的这一款，地点选择<code>San Francisco</code>，这个新加坡，虽然离中国近，但是速度慢，旧金山还是比较合适的。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/135912016.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure><br>选择确定之后，会发邮件告诉你IP地址以及账号密码。</p>
<h2 id="一键安装vpn"><a href="#一键安装vpn" class="headerlink" title="一键安装vpn"></a>一键安装vpn</h2><ul>
<li>使用<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="external">putty</a> 连接vps，我在打马赛克那个地方输入ip地址。然后点open<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/140209424.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></li>
<li>第一次进行会有个提示，点击确定就好。之后会要求输入当前密码账号，按照邮箱里边给的密码写就可以了。</li>
<li>成功登陆后，还会要求输入当前密码，然后自己设置<strong>新密码</strong></li>
<li>一键安装vpn代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget https://raw.githubusercontent.com/mmmwhy/centos-setup-simple-pptp-vpn/master/setup.sh</div><div class="line"></div><div class="line">chmod +x ./setup.sh</div><div class="line"></div><div class="line">./setup.sh</div></pre></td></tr></table></figure>
<p>全部复制，点两下确定，然后坐等片刻，vpn就搭好了。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/140730763.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></p>
<p>搭建的是最常见的pptp协议类型的vpn，使用win自带拨号程序即可连接。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170303/140844414.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure></p>
<h2 id="修改账户密码"><a href="#修改账户密码" class="headerlink" title="修改账户密码"></a>修改账户密码</h2><p><code>sudo vi /etc/ppp/chap-secrets</code><br>都有提示，按<code>i</code>之后修改就可以了。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>之前一直懒得写这样一篇教程，但是发现好多人对这方面都不了解，我稍微解释了一下。</p>
<ul>
<li>邀请得到的10刀和github50刀可以共存的问题</li>
<li>申请github学生优惠包的时候怎样描述自己的plan</li>
<li>paypel付款时，不要用paypel的汇率，用本地的汇率</li>
<li>一键安装包用的是linuxeye的脚本，我略微修改，还请多多指教。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用github学生优惠内的digitalocean，一键搭建vpn。获得60刀，免费用一年~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="GFW" scheme="http://feiyang.li/tags/GFW/"/>
    
      <category term="Linux" scheme="http://feiyang.li/tags/Linux/"/>
    
      <category term="github" scheme="http://feiyang.li/tags/github/"/>
    
      <category term="vpn" scheme="http://feiyang.li/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ 、Pycharm激活码及激活服务器</title>
    <link href="http://feiyang.li/2017/02/26/jetbrains/index.html"/>
    <id>http://feiyang.li/2017/02/26/jetbrains/index.html</id>
    <published>2017-02-26T13:28:39.000Z</published>
    <updated>2017-05-02T07:15:03.603Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><script src="/assets/js/DPlayer.min.js"> </script><blockquote>
<p>jetbrains 家的东西都非常好看，但是价格贵的令人发指，所以我搭建了一个 Pycharm激活服务器，可以用来激活 Pycharm，IntelliJ IDEA，WebStorm。避免频繁更换激活码的问题。</p>
</blockquote>
<hr>
<a id="more"></a>
<h1 id="jetbrains-激活服务器搭建"><a href="#jetbrains-激活服务器搭建" class="headerlink" title="jetbrains 激活服务器搭建"></a>jetbrains 激活服务器搭建</h1><h2 id="一台VPS"><a href="#一台VPS" class="headerlink" title="一台VPS"></a>一台VPS</h2><p>连vps都没有，小拳头你怕不怕(ง •̀_•́)ง 。 那你用我的吧，╮(╯▽╰)╭  。</p>
<h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><p>建议在特权模式下运行，即<code>sudo -s</code>一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://home.ustc.edu.cn/~mmmwhy/jetbrain.sh &amp;&amp; sh ./jetbrain.sh</div></pre></td></tr></table></figure></p>
<p>会出现两个空，用于输入端口号和默认用户名，建议直接回车，否则可能会出现莫名其妙的错误。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170227/131856881.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>将最后那个<strong>License sever地址</strong>记下，之后激活用。</p>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>选择<strong>License sever</strong>激活方式，输入激活地址<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170226/211949408.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="License sever激活" title="">
                </div>
                <div class="image-caption">License sever激活</div>
            </figure></p>
<p>分分钟应该就会弹出提示，一劳永逸解决激活问题。<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170226/212224250.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="激活成功提示" title="">
                </div>
                <div class="image-caption">激活成功提示</div>
            </figure></p>
<h2 id="激活服务器分享"><a href="#激活服务器分享" class="headerlink" title="激活服务器分享"></a>激活服务器分享</h2><p>我搭建了一个激活服务器，直接公布会很容易被封，需要的请关注：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170226/214429172.jpg?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="小小臭臭" title="">
                </div>
                <div class="image-caption">小小臭臭</div>
            </figure><br>回复“激活”即可获得地址。</p>
<h1 id="Pycharm注册码-IntelliJIDEA注册码"><a href="#Pycharm注册码-IntelliJIDEA注册码" class="headerlink" title="Pycharm注册码 / IntelliJIDEA注册码"></a>Pycharm注册码 / IntelliJIDEA注册码</h1><p><strong>紧急更新</strong>，因为之前的激活码已经被取消，修改hosts(C:\Windows\System32\drivers\etc)即可<br><strong>使用时需要将“0.0.0.0 account.jetbrains.com”添加到hosts文件中</strong><br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170502/150805050.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="mark" title="">
                </div>
                <div class="image-caption">mark</div>
            </figure><br>双击复制全部<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CNEKJPQZEX-eyJsaWNlbnNlSWQiOiJDTkVLSlBRWkVYIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9XSwiaGFzaCI6IjUxOTU1OTMvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-QOxwjWvRwJz6vo6J6adC3CJ4ukQHosbPYZ94URUVFna/Rbew8xK/M5gP3kAaPh6ZDveFdtMR1UBoumq3eCwXtXM3U3ls5noB4LIr+QplVlCj2pK5uNq7g/feyNyQcHpSXtvhIOnXDBLOecB05DOsxzm0p7ulGGJoAInmHeb9mc0eYjqc4RPpUQfh6HSYBnvEnKMlLF5bz4KEtzmsvvgA55CwzwQ3gRitm5Q/wUT7AQCBdjmBfNUjKVQL6TSjSDPp56FUdEs4Aab8LqstA2DIMbxocO64rvytmcUeIwu8Mi5uq87KQP5AQMSMYb59Inbd+dmVfx5cJo3fRS4/5s3/Hg==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</div></pre></td></tr></table></figure></p>
<p>在Activate code处粘贴进去即可<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://cdn.mmmxcc.cn/blog/20170226/213942164.png?imageView2/0/format/webp/interlace/1/q/75|watermark/2/text/ZmVpeWFuZy5saQ==/font/Y29taWMgc2FucyBtcw==/fontsize/500/fill/IzAzQTlGNA==/dissolve/35/gravity/SouthEast/dx/10/dy/10|imageslim
" alt="Activate code" title="">
                </div>
                <div class="image-caption">Activate code</div>
            </figure></p>
<hr>
<p>衷心感谢博主：ilanyu， <a href="http://blog.lanyus.com/" target="_blank" rel="external">http://blog.lanyus.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;jetbrains 家的东西都非常好看，但是价格贵的令人发指，所以我搭建了一个 Pycharm激活服务器，可以用来激活 Pycharm，IntelliJ IDEA，WebStorm。避免频繁更换激活码的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Pycharm激活" scheme="http://feiyang.li/tags/Pycharm%E6%BF%80%E6%B4%BB/"/>
    
  </entry>
  
</feed>
